<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Cybersecurity on The IT Blog</title>
        <link>https://blog.moroz.cc/categories/cybersecurity/</link>
        <description>Recent content in Cybersecurity on The IT Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <lastBuildDate>Fri, 07 Jun 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.moroz.cc/categories/cybersecurity/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Easy deploy OpenVPN service on any Linux server using custom script</title>
        <link>https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/</link>
        <pubDate>Fri, 07 Jun 2024 00:00:00 +0000</pubDate>
        
        <guid>https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/</guid>
        <description>&lt;img src="https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/header.png" alt="Featured image of post Easy deploy OpenVPN service on any Linux server using custom script" /&gt;&lt;h2 id=&#34;openvpn-overview&#34;&gt;OpenVPN overview&lt;/h2&gt;
&lt;p&gt;OpenVPN is a popular open-source software application that implements virtual private network (VPN) techniques for creating secure point-to-point or site-to-site connections. It is widely used for its flexibility, strong security, and ability to traverse network address translators (NATs) and firewalls. An OpenVPN server, in particular, is a server configured to handle OpenVPN connections, allowing clients to connect securely over a network, typically the Internet.&lt;/p&gt;
&lt;h3 id=&#34;key-features-of-openvpn-server&#34;&gt;Key Features of OpenVPN Server&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Encryption and Security:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;OpenVPN uses robust encryption methods to secure data transmission. It supports various encryption algorithms such as AES (Advanced Encryption Standard), which is widely trusted for its security.&lt;/li&gt;
&lt;li&gt;It uses SSL/TLS for key exchange, ensuring that even if the connection is intercepted, the data cannot be easily decrypted.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Cross-Platform Compatibility:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;OpenVPN is compatible with multiple operating systems, including Windows, Linux, macOS, iOS, and Android. This makes it a versatile choice for a wide range of devices.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Authentication:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;It supports multiple authentication methods, including username/password, certificate-based, and multi-factor authentication (MFA). This flexibility allows for enhanced security tailored to different use cases.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Configurability and Flexibility:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;OpenVPN can be configured to run on any port, using either TCP or UDP, which helps it avoid network restrictions and makes it easier to penetrate firewalls.&lt;/li&gt;
&lt;li&gt;It supports both site-to-site VPNs, which connect entire networks, and client-to-server VPNs, which connect individual devices to a network.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;Scalability:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;OpenVPN can be scaled to support a large number of users and complex network configurations, making it suitable for both small businesses and large enterprises.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;Open Source:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Being open-source means that the software&amp;rsquo;s code is publicly available for review, making it more transparent and allowing the community to contribute to its security and development.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;Support for Various Network Topologies:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;It can be used in routed or bridged configurations and can create secure connections over NAT.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;Bypass Restrictions:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;OpenVPN is effective at bypassing network restrictions, making it a popular choice for users in regions with heavy internet censorship.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;advantages-and-disadvantages&#34;&gt;Advantages and Disadvantages&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Advantages:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;High security with strong encryption and various authentication options.&lt;/li&gt;
&lt;li&gt;Flexibility in configuration and adaptability to different network environments.&lt;/li&gt;
&lt;li&gt;Compatibility with multiple operating systems and devices.&lt;/li&gt;
&lt;li&gt;Being open-source ensures transparency and community-driven improvements.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Disadvantages:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Initial setup and configuration can be complex, especially for users without networking experience.&lt;/li&gt;
&lt;li&gt;Performance can be impacted by factors such as server load and network latency.&lt;/li&gt;
&lt;li&gt;Requires maintenance and updates to ensure ongoing security and functionality.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;h3 id=&#34;obtain-install-script&#34;&gt;Obtain install script&lt;/h3&gt;
&lt;p&gt;The easiest way to install OpenVPN service on any Linux OS is using custom &lt;a class=&#34;link&#34; href=&#34;https://github.com/angristan/openvpn-install&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;openvpn-install script&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;First, login to your remote server using SSH, then download a script and make it executable:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget https://raw.githubusercontent.com/angristan/openvpn-install/master/openvpn-install.sh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo chmod +x openvpn-install.sh&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;deploy-openvpn-service&#34;&gt;Deploy OpenVPN service&lt;/h3&gt;
&lt;p&gt;Run the installation script, also make sure running it with root privileges:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo ./openvpn-install.sh&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The script is interactive, and next install steps require you just answering the questions, or leaving the default answer.&lt;/p&gt;
&lt;h4 id=&#34;define-listen-address&#34;&gt;Define listen address&lt;/h4&gt;
&lt;p&gt;It is a LAN network address that OpenVPN service will bind and listen.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/Screenshot_20240607_093722.png&#34;
	width=&#34;980&#34;
	height=&#34;208&#34;
	srcset=&#34;https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/Screenshot_20240607_093722_hue120906d5779c133d8c9ef7e4be515ba_44703_480x0_resize_box_3.png 480w, https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/Screenshot_20240607_093722_hue120906d5779c133d8c9ef7e4be515ba_44703_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;471&#34;
		data-flex-basis=&#34;1130px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;define-public-ip-address&#34;&gt;Define public IP address&lt;/h4&gt;
&lt;p&gt;It is a public internet IP address of your server. The script assuming you have static global IP.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/Screenshot_20240607_093828.png&#34;
	width=&#34;978&#34;
	height=&#34;94&#34;
	srcset=&#34;https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/Screenshot_20240607_093828_hudbac6ce67961df537df5fc5fbb88fb5a_20059_480x0_resize_box_3.png 480w, https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/Screenshot_20240607_093828_hudbac6ce67961df537df5fc5fbb88fb5a_20059_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1040&#34;
		data-flex-basis=&#34;2497px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;set-up-ipv6-support&#34;&gt;Set up IPv6 support&lt;/h4&gt;
&lt;p&gt;As I don&amp;rsquo;t have IPv6 support neither in my LAN, nor my internet provider supprots it, I will just disable IPv6.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/Screenshot_20240607_094037.png&#34;
	width=&#34;980&#34;
	height=&#34;126&#34;
	srcset=&#34;https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/Screenshot_20240607_094037_hufc2b2ff07a9b4769077823c1ba8702cb_17514_480x0_resize_box_3.png 480w, https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/Screenshot_20240607_094037_hufc2b2ff07a9b4769077823c1ba8702cb_17514_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;777&#34;
		data-flex-basis=&#34;1866px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;define-listen-port&#34;&gt;Define listen port&lt;/h4&gt;
&lt;p&gt;You can choose any port that OpenVPN service will bind and listen incoming connections.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/Screenshot_20240607_094121.png&#34;
	width=&#34;980&#34;
	height=&#34;127&#34;
	srcset=&#34;https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/Screenshot_20240607_094121_hue59f5e9f7c2084da43948fe187d49531_18706_480x0_resize_box_3.png 480w, https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/Screenshot_20240607_094121_hue59f5e9f7c2084da43948fe187d49531_18706_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;771&#34;
		data-flex-basis=&#34;1851px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;define-protocol&#34;&gt;Define protocol&lt;/h4&gt;
&lt;p&gt;It is recommended to use UDP unless you need TCP for some specific configurations or due to limitations on your server networking stack.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/Screenshot_20240607_094216.png&#34;
	width=&#34;978&#34;
	height=&#34;124&#34;
	srcset=&#34;https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/Screenshot_20240607_094216_hue58a57f86e9779577380048448d0b527_17047_480x0_resize_box_3.png 480w, https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/Screenshot_20240607_094216_hue58a57f86e9779577380048448d0b527_17047_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;788&#34;
		data-flex-basis=&#34;1892px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;choose-primary-dns-serveer&#34;&gt;Choose primary DNS serveer&lt;/h4&gt;
&lt;p&gt;Here you can choose any public known DNS resolver, or even define your custom DNS server. I recomment using OpenDNS resolver.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/Screenshot_20240607_094303.png&#34;
	width=&#34;980&#34;
	height=&#34;336&#34;
	srcset=&#34;https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/Screenshot_20240607_094303_hue452dd730e17a8a28807860ad809d695_76930_480x0_resize_box_3.png 480w, https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/Screenshot_20240607_094303_hue452dd730e17a8a28807860ad809d695_76930_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;291&#34;
		data-flex-basis=&#34;700px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;disable-compression&#34;&gt;Disable compression&lt;/h4&gt;
&lt;p&gt;It is highly recommended not to use compression due to known security limitations.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/Screenshot_20240607_094414.png&#34;
	width=&#34;980&#34;
	height=&#34;60&#34;
	srcset=&#34;https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/Screenshot_20240607_094414_hu9ffd5bbd03c9239a361334de9f55b1b4_12783_480x0_resize_box_3.png 480w, https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/Screenshot_20240607_094414_hu9ffd5bbd03c9239a361334de9f55b1b4_12783_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1633&#34;
		data-flex-basis=&#34;3920px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;customize-encryption-settings&#34;&gt;Customize encryption settings&lt;/h4&gt;
&lt;p&gt;At this step you can customize encryption settings if you need some specific tweaks, but is&amp;rsquo;s also fine to use pre-defined configuration.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/Screenshot_20240607_094504.png&#34;
	width=&#34;980&#34;
	height=&#34;183&#34;
	srcset=&#34;https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/Screenshot_20240607_094504_hu05868ea27eab6ece4f0d7515a93f5f0c_35908_480x0_resize_box_3.png 480w, https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/Screenshot_20240607_094504_hu05868ea27eab6ece4f0d7515a93f5f0c_35908_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;535&#34;
		data-flex-basis=&#34;1285px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;verify-parameters&#34;&gt;Verify parameters&lt;/h4&gt;
&lt;p&gt;After you defined all the parameters, you can scroll your terminal and verify your answers to the wizard. If everything is ok, just press any button to continue installation.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/Screenshot_20240607_094600.png&#34;
	width=&#34;978&#34;
	height=&#34;80&#34;
	srcset=&#34;https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/Screenshot_20240607_094600_huf5b80f09e81a0d7ddd41018be7c8b1cc_15585_480x0_resize_box_3.png 480w, https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/Screenshot_20240607_094600_huf5b80f09e81a0d7ddd41018be7c8b1cc_15585_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1222&#34;
		data-flex-basis=&#34;2934px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;setup-first-client&#34;&gt;Setup first client&lt;/h4&gt;
&lt;p&gt;It is required step to create at least one client configuration.&lt;/p&gt;
&lt;p&gt;First, define the client name:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/Screenshot_20240607_095317.png&#34;
	width=&#34;978&#34;
	height=&#34;83&#34;
	srcset=&#34;https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/Screenshot_20240607_095317_hudbb958d56fca3c7a6b9ab3d20a5e9455_12108_480x0_resize_box_3.png 480w, https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/Screenshot_20240607_095317_hudbb958d56fca3c7a6b9ab3d20a5e9455_12108_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1178&#34;
		data-flex-basis=&#34;2827px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Next, you have an option to protect *.ovpn configuration with password:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/Screenshot_20240607_095352.png&#34;
	width=&#34;980&#34;
	height=&#34;123&#34;
	srcset=&#34;https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/Screenshot_20240607_095352_hu7e9fb509aa29553852fda6c295391e23_23676_480x0_resize_box_3.png 480w, https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/Screenshot_20240607_095352_hu7e9fb509aa29553852fda6c295391e23_23676_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;796&#34;
		data-flex-basis=&#34;1912px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;download-client-configuration&#34;&gt;Download client configuration&lt;/h3&gt;
&lt;p&gt;The most secure way is to use SFTP connection to your filesystem server, you can use a single command in local terminal to download it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;scp shifthackz@192.168.0.37:/home/shifthackz/pixel7pro.ovpn ~&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Where you should replace with your values:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;shifthackz@192.168.0.37&lt;/code&gt;: here define your server user and IP address.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/home/shifthackz/pixel7pro.ovpn&lt;/code&gt;: this is a path of file on REMOTE server.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~&lt;/code&gt;: this is a destination download folder path on LOCAL computer (in my case ~ is current user home directory).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then transfer this file to the device that you want to use as client to connect to your openvpn server.&lt;/p&gt;
&lt;h3 id=&#34;test-client-connection&#34;&gt;Test client connection&lt;/h3&gt;
&lt;p&gt;In this example I will connect to my VPN network using Android phone. First, transfer downloaded *.ovpn file to your phone, and import it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/a1.png&#34;
	width=&#34;436&#34;
	height=&#34;875&#34;
	srcset=&#34;https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/a1_huf143cc52642040a857dfead4020b93c2_98832_480x0_resize_box_3.png 480w, https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/a1_huf143cc52642040a857dfead4020b93c2_98832_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Add new OpenVPN profile.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;49&#34;
		data-flex-basis=&#34;119px&#34;
	
&gt;
&lt;img src=&#34;https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/a2.png&#34;
	width=&#34;436&#34;
	height=&#34;873&#34;
	srcset=&#34;https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/a2_hu3d60133e06dd6f18a80797b2e8b63fa6_128144_480x0_resize_box_3.png 480w, https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/a2_hu3d60133e06dd6f18a80797b2e8b63fa6_128144_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Confirm import.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;49&#34;
		data-flex-basis=&#34;119px&#34;
	
&gt;
&lt;img src=&#34;https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/a3.png&#34;
	width=&#34;436&#34;
	height=&#34;875&#34;
	srcset=&#34;https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/a3_huf143cc52642040a857dfead4020b93c2_76814_480x0_resize_box_3.png 480w, https://blog.moroz.cc/post/easy-deploy-openvpn-service-on-any-linux-server-using-custom-script/a3_huf143cc52642040a857dfead4020b93c2_76814_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Verify connection to OpenVPN server.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;49&#34;
		data-flex-basis=&#34;119px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;After that try to open some website in browser and verify that internet connection works. In addition try to check your IP address on some public IP checker websites, you should have public IP address of OpenVPN server. Also you should be able to access some local device in the same LAN as OpenVPN sever.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Overall, OpenVPN server is a powerful tool for creating secure, flexible, and reliable VPN connections, making it a popular choice for both individuals and organizations looking to protect their data and network communications.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>How to deploy Pi-hole as a docker container in local network to block ads</title>
        <link>https://blog.moroz.cc/post/how-to-deploy-pi-hole-as-a-docker-container-in-local-network-to-block-ads/</link>
        <pubDate>Tue, 04 Jun 2024 00:00:00 +0000</pubDate>
        
        <guid>https://blog.moroz.cc/post/how-to-deploy-pi-hole-as-a-docker-container-in-local-network-to-block-ads/</guid>
        <description>&lt;img src="https://blog.moroz.cc/post/how-to-deploy-pi-hole-as-a-docker-container-in-local-network-to-block-ads/header.png" alt="Featured image of post How to deploy Pi-hole as a docker container in local network to block ads" /&gt;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Pi-hole is a network-wide ad blocker that acts as a DNS sinkhole. It is designed to block advertisements and trackers at the network level, meaning any device connected to your network can benefit from it without needing additional software.&lt;/p&gt;
&lt;h3 id=&#34;what-is-pi-hole&#34;&gt;What is Pi-hole?&lt;/h3&gt;
&lt;p&gt;Pi-hole is an open-source software project that serves as a DNS (Domain Name System) sinkhole. It is typically run on a low-power device, like a Raspberry Pi, but can also be installed on other hardware or within virtual machines. It intercepts DNS requests from devices on your local network and filters out domains known to serve ads, tracking, and malicious content.&lt;/p&gt;
&lt;h3 id=&#34;reasons-for-using-pi-hole&#34;&gt;Reasons for using Pi-hole&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Network-wide Ad Blocking: Unlike browser-based ad blockers, Pi-hole blocks ads for every device on your network, including smartphones, tablets, smart TVs, and other IoT devices.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enhanced Privacy: By blocking trackers, Pi-hole helps to protect your privacy across all devices. It prevents your data from being sent to third-party tracking services.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Improved Performance: Since ads and trackers are blocked before they are downloaded, pages can load faster, and there is reduced bandwidth usage.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Centralized Management: Pi-hole offers a web-based interface where you can view statistics, add custom block or allow lists, and manage settings, making it easy to control and monitor ad blocking for the entire network.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Device Compatibility: Pi-hole works with any device that uses your network&amp;rsquo;s DNS, making it a versatile solution for ad blocking.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;can-pi-hole-block-ads&#34;&gt;Can Pi-hole Block Ads?&lt;/h3&gt;
&lt;p&gt;Yes, Pi-hole can block ads effectively. It maintains a list of known ad-serving domains and blocks DNS requests to these domains. When a device on your network requests an ad domain, Pi-hole intercepts the request and prevents the ad content from being loaded. This results in fewer ads being displayed across all devices on the network, regardless of the application or browser being used.&lt;/p&gt;
&lt;h3 id=&#34;pi-hole-features&#34;&gt;Pi-hole features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;DNS Requests: Devices on your network send DNS requests to translate domain names (like example.com) into IP addresses.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Filtering: Pi-hole compares these DNS requests against its blocklists. If the domain is known to serve ads or track users, Pi-hole blocks the request.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sinkholing: Blocked requests are redirected to a &amp;ldquo;sinkhole,&amp;rdquo; typically an IP address that does nothing, ensuring the ad or tracker is not loaded.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Permitting: If the domain is not on the blocklist, Pi-hole forwards the request to an upstream DNS server (such as Google&amp;rsquo;s DNS or your ISP&amp;rsquo;s DNS) and returns the result to the requesting device.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;h3 id=&#34;deploy-as-a-docker-container&#34;&gt;Deploy as a docker container&lt;/h3&gt;
&lt;p&gt;Create a &lt;code&gt;docker-compose.yml&lt;/code&gt; file with the following configuration:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;services&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;pihole&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;container_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;pihole&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;pihole/pihole:latest&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;53:53/tcp&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;53:53/udp&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;8002:80/tcp&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;environment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;TZ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Europe/Kiev&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;WEBPASSWORD&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pihole&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;volumes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;s1&#34;&gt;&amp;#39;./etc-pihole:/etc/pihole&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;s1&#34;&gt;&amp;#39;./etc-dnsmasq.d:/etc/dnsmasq.d&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;restart&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;unless-stopped&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Explanation of important configuration parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;53:53/tcp&lt;/code&gt; and &lt;code&gt;53:53/udp&lt;/code&gt;: Binding both TCP and UDP 53 port of container to the same 53 port of host.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;8002:80/tcp&lt;/code&gt;: Binding 80 port of container to 8002 port of host, as the result web intarface will be available at 8002 port.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;TZ: &#39;Europe/Kiev&#39;&lt;/code&gt;: Setting correct timezone (your timezone might be different).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;WEBPASSWORD: &#39;pihole&#39;&lt;/code&gt;: Setting a password for admin interface.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;volumes&lt;/code&gt; section: Binding configuration folders from container to local folders so they persist in case container gets updated, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After saving the file, start the container:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker compose up -d&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;check-the-admin-interface&#34;&gt;Check the admin interface&lt;/h3&gt;
&lt;p&gt;Then use the host IP of your server in the local network, and navigate to url with the port in your browser, (I am using url &lt;code&gt;http://192.168.0.37:8002/admin&lt;/code&gt; in this example). You should see the pihole login page:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.moroz.cc/post/how-to-deploy-pi-hole-as-a-docker-container-in-local-network-to-block-ads/Screenshot_20240604_122302.png&#34;
	width=&#34;1324&#34;
	height=&#34;884&#34;
	srcset=&#34;https://blog.moroz.cc/post/how-to-deploy-pi-hole-as-a-docker-container-in-local-network-to-block-ads/Screenshot_20240604_122302_hufde2ff0e41aad0998a67afeb037a1ef6_115612_480x0_resize_box_3.png 480w, https://blog.moroz.cc/post/how-to-deploy-pi-hole-as-a-docker-container-in-local-network-to-block-ads/Screenshot_20240604_122302_hufde2ff0e41aad0998a67afeb037a1ef6_115612_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Pi-hole authentication web page.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;149&#34;
		data-flex-basis=&#34;359px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Enter the password defined in config earlier, then you should be able to log in:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.moroz.cc/post/how-to-deploy-pi-hole-as-a-docker-container-in-local-network-to-block-ads/Screenshot_20240604_122446.png&#34;
	width=&#34;1324&#34;
	height=&#34;884&#34;
	srcset=&#34;https://blog.moroz.cc/post/how-to-deploy-pi-hole-as-a-docker-container-in-local-network-to-block-ads/Screenshot_20240604_122446_hu492051f15466ee8f22fa8a3530769f52_123189_480x0_resize_box_3.png 480w, https://blog.moroz.cc/post/how-to-deploy-pi-hole-as-a-docker-container-in-local-network-to-block-ads/Screenshot_20240604_122446_hu492051f15466ee8f22fa8a3530769f52_123189_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Pi-hole admin interface.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;149&#34;
		data-flex-basis=&#34;359px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;ensure-port-53-is-bound&#34;&gt;Ensure port 53 is bound&lt;/h3&gt;
&lt;p&gt;It is recommended to check if port 53 is listened by your server host machine. To check it ssh into your server and run command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo netstat -tuwpan &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep &lt;span class=&#34;m&#34;&gt;53&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If port is listening, you should see output like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.moroz.cc/post/how-to-deploy-pi-hole-as-a-docker-container-in-local-network-to-block-ads/Screenshot_20240604_122820.png&#34;
	width=&#34;980&#34;
	height=&#34;307&#34;
	srcset=&#34;https://blog.moroz.cc/post/how-to-deploy-pi-hole-as-a-docker-container-in-local-network-to-block-ads/Screenshot_20240604_122820_hu0f8a7d04326354003d3fb242ee33b0b1_39667_480x0_resize_box_3.png 480w, https://blog.moroz.cc/post/how-to-deploy-pi-hole-as-a-docker-container-in-local-network-to-block-ads/Screenshot_20240604_122820_hu0f8a7d04326354003d3fb242ee33b0b1_39667_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Correctly listened tcp/udp port 53 on host server.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;319&#34;
		data-flex-basis=&#34;766px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;define-your-pi-hole-dns-server-as-primary-in-your-router&#34;&gt;Define your Pi-hole DNS server as primary in your router&lt;/h3&gt;
&lt;p&gt;To actually make use of your Pi-hole service for all the devices in the local network you should set you Pi-hole sever as a primary DNS server in the router settings. Use IP address of your host server (in my case 192.168.0.37) in the router setting. This procedure is different for every router, so I just show the result here:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.moroz.cc/post/how-to-deploy-pi-hole-as-a-docker-container-in-local-network-to-block-ads/Screenshot_20240604_123254.png&#34;
	width=&#34;1324&#34;
	height=&#34;884&#34;
	srcset=&#34;https://blog.moroz.cc/post/how-to-deploy-pi-hole-as-a-docker-container-in-local-network-to-block-ads/Screenshot_20240604_123254_hu96d73087aed81f8c3991bbeae86b4fa5_150138_480x0_resize_box_3.png 480w, https://blog.moroz.cc/post/how-to-deploy-pi-hole-as-a-docker-container-in-local-network-to-block-ads/Screenshot_20240604_123254_hu96d73087aed81f8c3991bbeae86b4fa5_150138_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;DNS Settings&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;149&#34;
		data-flex-basis=&#34;359px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;After that you should see some queries in Pi-hole admin interface:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.moroz.cc/post/how-to-deploy-pi-hole-as-a-docker-container-in-local-network-to-block-ads/Screenshot_20240604_123540.png&#34;
	width=&#34;1324&#34;
	height=&#34;884&#34;
	srcset=&#34;https://blog.moroz.cc/post/how-to-deploy-pi-hole-as-a-docker-container-in-local-network-to-block-ads/Screenshot_20240604_123540_huf7c4848fedafcc0f9ae0ce6b1f9d8d3f_168352_480x0_resize_box_3.png 480w, https://blog.moroz.cc/post/how-to-deploy-pi-hole-as-a-docker-container-in-local-network-to-block-ads/Screenshot_20240604_123540_huf7c4848fedafcc0f9ae0ce6b1f9d8d3f_168352_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Pi-hole queries&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;149&#34;
		data-flex-basis=&#34;359px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Pi-hole is a powerful tool for network-wide ad blocking, offering enhanced privacy, improved performance, and centralized control over DNS filtering. It is recommended for anyone looking to reduce ads and trackers across all devices in their home or small office network.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Configure SSH authorization based on RSA key</title>
        <link>https://blog.moroz.cc/post/configure-ssh-authorization-based-on-rsa-key/</link>
        <pubDate>Sun, 10 Mar 2024 00:00:00 +0000</pubDate>
        
        <guid>https://blog.moroz.cc/post/configure-ssh-authorization-based-on-rsa-key/</guid>
        <description>&lt;img src="https://blog.moroz.cc/post/configure-ssh-authorization-based-on-rsa-key/header.jpg" alt="Featured image of post Configure SSH authorization based on RSA key" /&gt;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;SSH key-based authentication is a method of securely logging into a remote system or server using cryptographic keys instead of passwords. It works based on public-key cryptography, where a pair of keys is generated—a public key and a private key. The public key is stored on the server, and the private key is kept secure on the client side.&lt;/p&gt;
&lt;h3 id=&#34;how-it-works&#34;&gt;How it works?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Key Generation: The user generates a pair of cryptographic keys—a public key and a private key. The private key is kept securely on the user&amp;rsquo;s computer, while the public key is placed on the server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Server Configuration: The public key is added to the server&amp;rsquo;s list of authorized keys. This means the server will recognize the corresponding private key when presented during login attempts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Login Attempt: When the user attempts to log in to the server, the client software presents the private key. The server checks if this private key corresponds to any of the public keys it has on record for authorized users.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Authentication: If the server finds a match, it allows the user to log in without the need for a password.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;why-using-keys-is-more-secure&#34;&gt;Why using keys is more secure?&lt;/h3&gt;
&lt;p&gt;Key-based authentication is considered more secure than password-based authentication for several reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Resistance to brute-force attacks: Passwords can be guessed or cracked through brute-force attacks. However, with key-based authentication, an attacker would need to possess the private key, which ideally should be securely stored and not easily accessible.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;No transmission of passwords: In password-based authentication, the password is transmitted over the network, which can potentially be intercepted by attackers. With key-based authentication, the private key never leaves the client machine, so there&amp;rsquo;s no risk of interception.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Stronger encryption: SSH keys use strong cryptographic algorithms for authentication, making them resistant to various types of attacks.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;No reliance on human-generated passwords: Human-generated passwords can be weak and prone to being compromised. Keys, on the other hand, are randomly generated and typically much longer, making them harder to guess.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Overall, SSH key-based authentication offers a higher level of security and is recommended for remote access to servers and systems, especially in environments where security is paramount.&lt;/p&gt;
&lt;h2 id=&#34;implementation-example&#34;&gt;Implementation example&lt;/h2&gt;
&lt;p&gt;Next let&amp;rsquo;s talk how actually implement RSA key based authorizatoin to access the remote server via SSH protocol. This guide assumes you have local and remote (server) Linux systems, and you already have access to your server via password based ssh protocol.&lt;/p&gt;
&lt;h3 id=&#34;generate-the-new-ssh-key&#34;&gt;Generate the new ssh key&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;🟢 &lt;strong&gt;Security Tip:&lt;/strong&gt; if you have multiple servers that you want to access via key based SSH it is strongly recommended to create different ssh key for every server.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;All the ssh keys are stored in the &lt;code&gt;.ssh&lt;/code&gt; directory that is located at your user home directory, so we need to change the working dir in the terminal:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ~/.ssh&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In my case there was no &lt;code&gt;.ssh&lt;/code&gt; directory, so I created it manually:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir ~/.ssh&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then to generate a new key type this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ssh-keygen -t rsa -b &lt;span class=&#34;m&#34;&gt;4096&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The parameters in the generation command above mean:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;-t rsa&lt;/code&gt;: Specifies the type of key to create. In this case, it indicates that the RSA algorithm should be used. RSA (Rivest-Shamir-Adleman) is a widely used public-key cryptosystem for secure data transmission.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;b 4096&lt;/code&gt;: Specifies the number of bits in the key. In this case, it sets the key size to 4096 bits. Larger key sizes generally provide stronger security but may also require more computational resources for encryption and decryption.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The key creation wizard will ask you some parameters:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Enter a file in which save a key.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In case you have multiple keys for multimple servers it is recommended to name your key files in a way you can later understand what key is used to access some particular server.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.moroz.cc/post/configure-ssh-authorization-based-on-rsa-key/keygen1.png&#34;
	width=&#34;774&#34;
	height=&#34;91&#34;
	srcset=&#34;https://blog.moroz.cc/post/configure-ssh-authorization-based-on-rsa-key/keygen1_hu8d6d15052f779ad7368122857a68f8d0_12959_480x0_resize_box_3.png 480w, https://blog.moroz.cc/post/configure-ssh-authorization-based-on-rsa-key/keygen1_hu8d6d15052f779ad7368122857a68f8d0_12959_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Example of setting the SSH key filename&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;850&#34;
		data-flex-basis=&#34;2041px&#34;
	
&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Enter key passphraze (twice).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To actually unlock the ssh key you need to specify a secure password. It means that in case your key becomes stolen or compromised it will be still protected by password.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;🟢 &lt;strong&gt;Security Tip:&lt;/strong&gt; it is recommended to have different password for the ssh key and for the remote unix user.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Finally, after key is created you will see the output in terminal like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.moroz.cc/post/configure-ssh-authorization-based-on-rsa-key/keygen2.png&#34;
	width=&#34;768&#34;
	height=&#34;448&#34;
	srcset=&#34;https://blog.moroz.cc/post/configure-ssh-authorization-based-on-rsa-key/keygen2_hub535883082eb7eeeed4bf165e660476e_51704_480x0_resize_box_3.png 480w, https://blog.moroz.cc/post/configure-ssh-authorization-based-on-rsa-key/keygen2_hub535883082eb7eeeed4bf165e660476e_51704_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Example of successful SSH key generation&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;171&#34;
		data-flex-basis=&#34;411px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;copy-public-key-to-your-server&#34;&gt;Copy public key to your server&lt;/h3&gt;
&lt;p&gt;There are many ways you can copy the public ssh key to your server, but the most secure way is to use &lt;code&gt;SCP&lt;/code&gt; (secure copy).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;🟡 &lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;scp&lt;/code&gt; and &lt;code&gt;ssh&lt;/code&gt; commands require to enter the password of the remote &lt;code&gt;user&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To copy the public key use a command like this, but don&amp;rsquo;t forget to replace the parameters with your actual ones:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;scp dc1srv1.pub user@192.168.0.2:&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The parameters of the scp command mean:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dc1srv1.pub&lt;/code&gt; is a public key file that was created at previous step.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;user&lt;/code&gt; is the username on the remote machine.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;192.168.0.2&lt;/code&gt; - the IP or domain of the remote machine.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:&lt;/code&gt; - the path where to copy &lt;code&gt;dc1srv1.pub&lt;/code&gt; file (in this case home directory of the remote &lt;code&gt;user&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;allow-the-public-key-on-sever&#34;&gt;Allow the public key on sever&lt;/h3&gt;
&lt;p&gt;To do this we need to connect to a server shell via SSH protocol, in another terminal, connect to the remote shell:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ssh user@192.168.0.2&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then check that you also have &lt;code&gt;.ssh&lt;/code&gt; directory in the home folder of the remote &lt;code&gt;user&lt;/code&gt;, if you don&amp;rsquo;t, create it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir ~/.ssh&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create an &lt;code&gt;authorized_keys&lt;/code&gt; file in &lt;code&gt;.ssh&lt;/code&gt; directory:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;touch ~/.ssh/authorized_keys&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Copy the contents of the public key to the &lt;code&gt;authorized_keys&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat ~/dc1srv1.pub &amp;gt;&amp;gt; ~/.ssh/authorized_keys&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After that the transferred at the previous step public key file is no longer needed, so it can be deleted:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rm ~/dc1srv1.pub&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;change-ssh-configuration&#34;&gt;Change SSH configuration&lt;/h3&gt;
&lt;p&gt;To change the ssh configuration edit the file &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo nano /etc/ssh/sshd_config&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this file you should find some paramters, and set their values explicitly:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Disallow connection as root user&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;PermitRootLogin no
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Enable public key authentication&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;PubkeyAuthentication yes
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Disable challenge response&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ChallengeResponseAuthentication no
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Enable PAM&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;UsePAM yes
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Disable password based authentication&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;PasswordAuthentication no
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;After saving the file, restart the &lt;code&gt;sshd&lt;/code&gt; service:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo systemctl restart sshd&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;🔴 &lt;strong&gt;IMPORTANT:&lt;/strong&gt; After the &lt;code&gt;sshd&lt;/code&gt; restart the new configuration will take effect. It is recommended to &lt;strong&gt;NOT CLOSE&lt;/strong&gt; your currently opened ssh session and keep it until you test and ensure your new ssh key works in &lt;strong&gt;ANOTHER terminal window&lt;/strong&gt;. In this case if something goes wrong you can still revert the changes back to &lt;code&gt;ssh_config&lt;/code&gt; file and restart the &lt;code&gt;sshd&lt;/code&gt; daemon to apply previous configuration.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;check-the-ssh-authentication&#34;&gt;Check the SSH authentication&lt;/h3&gt;
&lt;h4 id=&#34;verify-password-based-authentication-is-not-allowed&#34;&gt;Verify password based authentication is not allowed&lt;/h4&gt;
&lt;p&gt;First, let&amp;rsquo;s verify that we can not connect as root and as a generic user, so for the command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ssh root@192.168.0.2&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ssh user@192.168.0.2&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You should get an error &lt;code&gt;Permission denied (publickey)&lt;/code&gt;.&lt;/p&gt;
&lt;h4 id=&#34;verify-key-based-authentication-works&#34;&gt;Verify key based authentication works&lt;/h4&gt;
&lt;p&gt;The ssh command to connect to your remote server will be a bit different, as you should specify the ssh key that needs to be used for authentication:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ssh -i ~/.ssh/dc1srv1 user@192.168.0.2&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After typing this command you will be promted to enter the password that was used during ssh key generation.&lt;/p&gt;
&lt;h2 id=&#34;conclution&#34;&gt;Conclution&lt;/h2&gt;
&lt;p&gt;After you complete this tutorial your server is using secure key based ssh authentication. Keep in mind that you need to backup your ssh keys, because if you lose your ssh key there is no way you can connect to the remote machine via the ssh (in this case only bare metal access to the remote machine can help reset a key, or if you are using some VPS/hosting provider some admin web panels allow resetting ssh settings).&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
