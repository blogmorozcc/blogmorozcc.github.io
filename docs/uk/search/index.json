[{"content":"Вступ Електронна пошта, або email - це технологія, що дозволяє користувачам обмінюватися інформацією за допомогою листів. Принцип та протоколи побудовано за аналогією роботи звичайної паперової пошти.\nДля роботи електронної пошти потрібен поштовий сервер з виділенним доменом (наприклад example.com), та кожному з користувачів виділяється адреса поштової скриньки (наприклад user@example.com).\nНаразі існує багато поштових провайдерів, що дозволяють створити адресу поштової скриньки безкоштовно, наприклад gmail, outlook, yahoo, та інші. Доступ до скриньки можливий як через веб-інтерфейс, так і через поштові протоколи SMTP, IMAP, POP3. Кожен з провайдерів має ліміт на максимально можливий об\u0026rsquo;єм для зберігання листів та файлів-вкладень.\nПричини використання власного сервера Можна навести випадки, коли використовувння поштової скриньки, зареєстровану на сервері публічного поштового провайдеру не підходить через деякі причини. Використання влашного поштового сервера для листування має як свої переваги так і недоліки.\nПереваги 1. Використання своєї адреси.\nЧерез дуже велику кількість уже зареєстрованих користувачів на серверах публічних поштових провайдерів, дуже велика імовірність того, що бажаний формат адреси поштової скриньки вже зареєстрований. І тому для реєстрації користувачам доводиться додавати деякі слова, цифри, та навіть спецсимволи, щоб знайти вільну адресу.\nВласний поштовий сервер дозволяє використовувати бажаний формат адреси, що може мати вигляд user1@domain.com, user2@domain.com, тощо. Також поштовий сервер може обслуговувати декілька доменів, наприклад domain.com, brand.ua.\nТакий підхід дуже часто використовують для корпоративної пошти, де для кожного працівника створюється скринька на домені компанії. Такі адреси краще запам\u0026rsquo;ятовуються, що спонукає користувачів до комунікації.\n2. Незалежність від правил поштового провайдера.\nКожний серівс має свої правила та обмеження, що можуть не задовільняти потреби користувача. Можна навести деякі приклади, це можуть бути:\nобмеження на об\u0026rsquo;єм, що виділяється для зберігання пошти; заборона на використання протоколів POP3, IMAP, SMTP; нав\u0026rsquo;язлива реклама, що додається у підписи до відправлених листів; політика блокування аккаунтів. Маючи свій поштовий сервер, ви не обтяжені правилами з використання, а об\u0026rsquo;єм обмежено лише можливостями сервера.\n3. Приватність та конфіденційність даних.\nПри користуванні сервісом, всі поштові листи та вкладення зберігаються на серверах провайдера. Немає жодних гарантій, що ваші персональні дані, та листування не передаються третім особам, або не аналізуються алгоритмами machine learning для перевірки вмісту на виявлення певної інформації.\nДеякі провайдери дозволяють користувачу видалити аккаунт, але це не означає фактичне видалення інформації про користувача та його листів.\nМаючи свій поштовий сервер можливо гнучко управляти своїми даними та листами, де кожна маніпуляція з даними є прозорою, та фактично виконується. У разі якщо для хостингу поштового сервера арендується VPS/VDS, то єдиним звеном що має доступ до ваших даних є провайдер хмарного хостингу.\nНедоліки 1. Це не безкоштовно.\nНа відміну від скриньки що можна отримати у поштового провайдера безкоштовно, для хостингу власного поштовогу сервісу необхідно орендувати або мати свій VPS/VDS сервер та домен.\n2. Безпека, обслуговування та адміністрування.\nБудь яка інформаційна система потребує обслуговання. Популярні поштові провайдери мають відділи кваліфікованих спеціалістів для адміністрування та цілодобового моніторингу роботоздатності систем.\nУ випадку використання власного сервера, вся робота з обслуговування й відповідальність за безпеку системи та її безперебійну роботу повністю лягає на користувача. Для цього необхідно володіти деякими технічними навичками, та розуміти схематику роботу системи хоча б на мінімальному рівні.\n3. Спам.\nСервери що викорустовуються для обміну електронною поштою дуже часто стають жертвами хакерів, використовуються для розсилки спаму, або небажаної пошти. У разі якщо сервер буде дуже часто відсилати спам, то IP-адресу серверу буде занесено у числені спам-бази.\nУ такому випадку, навіть листи що не підпадають під категорію спаму, при відправці з цього сервера будуть потрапляти у спам фільтри, або навіть не доходити до кінцевого адресата.\nВимоги до сервера Для того щоб сервер підходив для використання в якості поштового сервера, він повинен відповідати деяким критеріям:\nМати виділену, білу IP-адресу; Мати відкриті порти для роботи поштових протоколів: 25, 110, 143, 465, 587, 993, 995; Мати відкриті порти для доступу через веб-інтерфейс: 80 або 443; Мати достатній обсяг оперативної пам\u0026rsquo;яті: для персональної скриньки достатньо 1 Гб, але чим більше користувачів, тим більше пам\u0026rsquo;яті потрібно. Вибір програмного забезпечення Для розгортання власного сервера існують стеки ПЗ на базі компонентів з відкритим вихідним кодом. Звичайно можна зібрати свою конфігурацію із цих компонентів, але це вимагає більш поглибленного вивчення кожного з них, та більше часу на відладку й тестування.\n","date":"2022-07-22T00:00:00Z","image":"https://blog.moroz.cc/uk/post/%D0%B2%D0%B8%D0%BA%D0%BE%D1%80%D0%B8%D1%81%D1%82%D0%B0%D0%BD%D0%BD%D1%8F-%D0%BF%D1%80%D0%B8%D0%B2%D0%B0%D1%82%D0%BD%D0%BE%D0%B3%D0%BE-%D0%BF%D0%BE%D1%88%D1%82%D0%BE%D0%B2%D0%BE%D0%B3%D0%BE-%D1%81%D0%B5%D1%80%D0%B2%D0%B5%D1%80%D0%B0-%D0%BD%D0%B0-%D0%B1%D0%B0%D0%B7%D1%96-mailcow/header_hue240bb946ab7e16adc3a9ae5a9bb2d15_513324_120x120_fill_q75_box_smart1.jpg","permalink":"https://blog.moroz.cc/uk/post/%D0%B2%D0%B8%D0%BA%D0%BE%D1%80%D0%B8%D1%81%D1%82%D0%B0%D0%BD%D0%BD%D1%8F-%D0%BF%D1%80%D0%B8%D0%B2%D0%B0%D1%82%D0%BD%D0%BE%D0%B3%D0%BE-%D0%BF%D0%BE%D1%88%D1%82%D0%BE%D0%B2%D0%BE%D0%B3%D0%BE-%D1%81%D0%B5%D1%80%D0%B2%D0%B5%D1%80%D0%B0-%D0%BD%D0%B0-%D0%B1%D0%B0%D0%B7%D1%96-mailcow/","title":"Використання приватного поштового сервера на базі Mailcow"},{"content":"Встуа Наразі існує дуже багато платформ для онлайн-стримінгу відеоконтенту, такі як YouTube, Twitch, та інші. Для трансляції потокового відео через мережу інтернет вони використовують прокотол RTMP (Real-Time Messaging Protocol). Хоча ці платформи мають потужні можливості для проведення відеотрансляцій, в деяких випадках незалежність від стримінгової платформи та її правил є цілком доцільною.\nУ цій статті наведемо інструкцію з деплойменту RTMP сервіса на базі Nginx-RTMP, що дозволить приймати RTMP потік від комп\u0026rsquo;ютера стримера, та конвертувати його в сучасні формати HLS та DASH для перегляду у програмі-приймачі.\nПередумови Для реалізації RTMP сервісу, вам потрібно мати:\nНову віртуальну машину або фізичний сервер на базі ОС Linux. Комп\u0026rsquo;ютер для ведення трансляції. Для роботи поза локальною мережею, в глобальній мережі інтернет:\nВиділену IP адресу. Домен. В інструкції буде використано VPS на базі Debian 11.\nРобота з Nginx-RTMP Встановлення Перш за все, необхідно встановити пакети nginx та libnginx-mod-rtmp. Для цього потрібно виконати команди:\n1 2 sudo apt update sudo apt install nginx libnginx-mod-rtmp Налаштування RTMP Після встановлення, потрібно сконфігурувати веб-сервер Nginx таким чином, щоб він прослуховував порт 1935 для отримання RTMP-потоку. Для цього потрібно відредагувати файл /etc/nginx/nginx.conf:\n1 sudo nano /etc/nginx/nginx.conf В кінці файла, потрібно дописати конфігурацію RTMP сервера:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 ... rtmp { server { listen 1935; chunk_size 4096; allow publish 127.0.0.1; allow publish 192.168.0.0/24; deny publish all; application live { live on; record off; hls on; hls_path /var/www/html/stream/hls; hls_fragment 3; hls_playlist_length 60; dash on; dash_path /var/www/html/stream/dash; } } } ... Тлумачення важливих аспектів цієї конфігурації:\nlisten 1935 - задає порт, на якому працює RTMP сервер. chunk_size 4096 - задає розмір блоку, по 4 Кб. allow publish [IP / Subnet] - кожна строка вказує IP або підмережу, яким дозволено відсилати RTMP потік на сервер. deny publish all - забороняє приймати RTMP потік від всіх інших адрес/мереж. application live - конфігурація для перетворення RTMP в формати HLS та DASH, де hls_path та dash_path вказують шляхи до каталогів для розміщення плейлистів. live on - дозволяє приймати дані відеопотоком. record off - вимикає запис відеопотоку у файл на диску. Налаштвання HLS, DASH Далі, необхідно розгорнути віртуальний хост, що дозволить отримувати доступ до HLS або DASH потоків через HTTP/HTTPS протокол.\nСпочатку треба створити дві директорії для зберігання фрагментів відеопотоку для HLS та DASH:\n1 2 sudo mkdir -p /var/www/html/stream/hls sudo mkdir -p /var/www/html/stream/dash Та також встановити власника та права:\n1 2 sudo chown -R www-data:www-data /var/www/html/stream sudo chmod -R 755 /var/www/html/stream Для роботи віртуального хоста, потрібно створити новий конфігураційний файл (наприклад rtmp) в каталозі /etc/nginx/sites-available:\n1 sudo nano /etc/nginx/sites-available/rtmp Хост файл rtmp складається з наступного:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 server { listen 443 ssl; listen 80; server_name rtmp.yourdomain.com; ssl_certificate /etc/ssl/yourdomain.crt; ssl_certificate_key /etc/ssl/yourdomain.key; ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2; location / { add_header Access-Control-Allow-Origin *; root /var/www/html/stream; } } types { application/dash+xml mpd; } Пояснення до цієї конфігурації:\nЗамініть rtmp.yourdomain.com на свій домен. Якщо ви хочете використовувати SSL, то також запишіть файли сертифікату та ключа за шляхами /etc/ssl/yourdomain.crt та /etc/ssl/yourdomain.key. Якщо ви не хочете використовувати SSL, то приберіть з файлу рядки що починаються з ssl та listen 443 ssl. Для того щоб всі зроблені конфігурації вступили в дію, треба увімкнути віртуальний хост та перезавантажити Nginx:\n1 2 sudo ln -s /etc/nginx/sites-available/rtmp /etc/nginx/sites-enabled/ sudo service nginx restart Ведення трансляції в OBS Studio Для ведення трансляції найкраще за все підходить програма OBS Studio.\nПершочергово необхідно створити сцену, налаштувати звук, та зовнішній вигляд трансляції.\nДля налаштування параметрів стримінгу, потрібно зайти в Налаштування та вибрати вкладку Stream. Там необхідно задати наступні параметри:\nService: Custom Server: rtmp://rtmp.yourdomain.com/live (замість домену можна вказати IP, наприклад http://11.22.33.44/live) Stream Key: obs_stream Приклад налаштувань:\nДля запуску відеотрансляції, необхідно натиснути Start Streaming в головномі вікні програми:\nПерегляд трансляції Тепер трансляцію можна переглянути за допомогою будь-якої програми, що підтримує протоколи HLS та DASH. Найпростішим шляхом буде перегляд у програмі VLC, відкривши посилання на потік.\nДля початку, розберемося як формується посилання на потоки в сконфігурованому сервісі:\nHLS: {protocol}://{domain}/hls/{stream key}.m3u8 DASH: {protocol}://{domain}/dash/{stream key}.mpd Наприлкад, якщо ви розгорнули сервіс за адресою rtmp.yourdomain.com що використовує SSL, та в налаштуваннях OBS вказали ключ obs_stream, то в такому випадку посилання будуть такими:\n1 2 https://rtmp.yourdomain.com/hls/obs_stream.m3u8 https://rtmp.yourdomain.com/dash/obs_stream.mpd Для перегляду в VLC, потрібно натиснути Ctrl + N, або перейти в меню Media \u0026gt; Open Network Stream, вказати посилання на один із форматів, та натиснути Play.\nВисновки Таким чином можна створити свій сервіс для проведення трансляцій, що буде незалежним від популярних сервісів.\nПереваги такого рішення:\nПриватність та повний контроль над інфраструктурою, гарантія що дані потоку не зберігаються. Не потрібно дотримуватися правил сервісу (наприклад заборону транслювати певний контент). Але є і певні недоліки:\nТаке рішення вимагає певних ресурсів сервера. Власнику потрібно витрачати час та кошти на обслуговування та підтримку безпеки своєї інфраструктури. ","date":"2022-07-20T00:00:00Z","image":"https://blog.moroz.cc/uk/post/%D1%80%D0%BE%D0%B7%D0%B3%D0%BE%D1%80%D1%82%D0%B0%D0%BD%D0%BD%D1%8F-rtmp-%D1%81%D0%B5%D1%80%D0%B2%D0%B5%D1%80%D0%B0-%D0%B4%D0%BB%D1%8F-%D1%81%D1%82%D1%80%D0%B8%D0%BC%D1%96%D0%BD%D0%B3%D1%83-%D0%B2%D0%B8%D0%BA%D0%BE%D1%80%D0%B8%D1%81%D1%82%D0%BE%D0%B2%D1%83%D1%8E%D1%87%D0%B8-nginx-rtmp/header_hu41968337912a42023606e3de60723367_1230034_120x120_fill_q75_box_smart1.jpeg","permalink":"https://blog.moroz.cc/uk/post/%D1%80%D0%BE%D0%B7%D0%B3%D0%BE%D1%80%D1%82%D0%B0%D0%BD%D0%BD%D1%8F-rtmp-%D1%81%D0%B5%D1%80%D0%B2%D0%B5%D1%80%D0%B0-%D0%B4%D0%BB%D1%8F-%D1%81%D1%82%D1%80%D0%B8%D0%BC%D1%96%D0%BD%D0%B3%D1%83-%D0%B2%D0%B8%D0%BA%D0%BE%D1%80%D0%B8%D1%81%D1%82%D0%BE%D0%B2%D1%83%D1%8E%D1%87%D0%B8-nginx-rtmp/","title":"Розгортання RTMP сервера для стримінгу, використовуючи Nginx RTMP"}]