<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Віртуалізація on Блог про IT</title>
        <link>http://localhost:1313/uk/categories/%D0%B2%D1%96%D1%80%D1%82%D1%83%D0%B0%D0%BB%D1%96%D0%B7%D0%B0%D1%86%D1%96%D1%8F/</link>
        <description>Recent content in Віртуалізація on Блог про IT</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>uk</language>
        <lastBuildDate>Sat, 01 Jun 2024 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/uk/categories/%D0%B2%D1%96%D1%80%D1%82%D1%83%D0%B0%D0%BB%D1%96%D0%B7%D0%B0%D1%86%D1%96%D1%8F/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Запуск Stable Diffusion у віртуальній машині на відеокарті AMD (AUTOMATIC1111 &#43; KVM &#43; GPU Passthrough)</title>
        <link>http://localhost:1313/uk/post/%D0%B7%D0%B0%D0%BF%D1%83%D1%81%D0%BA-stable-diffusion-%D1%83-%D0%B2%D1%96%D1%80%D1%82%D1%83%D0%B0%D0%BB%D1%8C%D0%BD%D1%96%D0%B9-%D0%BC%D0%B0%D1%88%D0%B8%D0%BD%D1%96-%D0%BD%D0%B0-%D0%B2%D1%96%D0%B4%D0%B5%D0%BE%D0%BA%D0%B0%D1%80%D1%82%D1%96-amd-automatic1111--kvm--gpu-passthrough/</link>
        <pubDate>Sat, 01 Jun 2024 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/uk/post/%D0%B7%D0%B0%D0%BF%D1%83%D1%81%D0%BA-stable-diffusion-%D1%83-%D0%B2%D1%96%D1%80%D1%82%D1%83%D0%B0%D0%BB%D1%8C%D0%BD%D1%96%D0%B9-%D0%BC%D0%B0%D1%88%D0%B8%D0%BD%D1%96-%D0%BD%D0%B0-%D0%B2%D1%96%D0%B4%D0%B5%D0%BE%D0%BA%D0%B0%D1%80%D1%82%D1%96-amd-automatic1111--kvm--gpu-passthrough/</guid>
        <description>&lt;img src="http://localhost:1313/post/how-to-run-stable-diffusion-in-vm-on-amd-gpu-automatic1111--kvm--gpu-passthrough/header.png" alt="Featured image of post Запуск Stable Diffusion у віртуальній машині на відеокарті AMD (AUTOMATIC1111 &#43; KVM &#43; GPU Passthrough)" /&gt;&lt;h2 id=&#34;вступ&#34;&gt;Вступ&lt;/h2&gt;
&lt;p&gt;Stable Diffusion — це модель глибокого навчання з текстом у зображення, розроблена Stability AI, що використовується для створення детальних зображень на основі текстових підказок. Модель належить до класу генеративних моделей, званих дифузійними моделями, які ітеративно знімають шум у випадковому сигналі для отримання зображення. AUTOMATIC1111 відноситься до популярної реалізації веб-інтерфейсу користувача (UI) для взаємодії із Stable Diffusion. Він забезпечує надійний і зручний спосіб використання можливостей Stable Diffusion.&lt;/p&gt;
&lt;h3 id=&#34;чому-я-запускаю-automatic1111-у-віртуальній-машині&#34;&gt;Чому я запускаю AUTOMATIC1111 у віртуальній машині&lt;/h3&gt;
&lt;p&gt;В одній із моїх попередніх статей я згадав, що використовую ПК з двома відеокартами AMD, використовує Arch Linux в якості основної ОС. Особисто для мене запуск AUTOMATIC1111 у віртуальній машині на базі KVM із прокиданням відеокарти AMD має кілька ключових переваг:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Портативність&lt;/strong&gt;. Оскільки я використовую Arch Linux як свою основну хост-ОС на різних комп’ютерах, інколи буває складно керувати залежностями, необхідними для запуску AUTOMATIC1111. Наприклад, на момент написання цієї статті (02.06.2024) для AUTOMATIC1111 потрібен Python 3.10, а найновішою версією Python в офіційних репозиторіях arch є Python 3.12. У разі запуску AUTOMATIC1111 усередині віртуальної машини я можу налаштувати залежності всередині цієї віртуальної машини, і мені не потрібно турбуватися про те, що залежності потенційно стануть некоректними після оновлення Arch.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Резервне копіювання&lt;/strong&gt;. Оскільки я маю сховище віртуальної машини як один файл *.qcow2, я можу створити його резервну копію, перенести на іншу машину чи сервер у своїй домашній лабораторії. Також легко зберігати файли AI моделей та LORA в cховищі віртуальної машини, і якщо мені потрібно перенести інсталяцію AUTOMATIC1111 на іншу реальну машину, мені потрібно лише скопіювати резервну копію віртуальної машини. Немає необхідності кожного разу встановлювати залежності, налаштовувати моделі.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;для-чого-мені-потрібен-automatic1111&#34;&gt;Для чого мені потрібен AUTOMATIC1111&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/ShiftHackZ/Stable-Diffusion-Android/raw/master/docs/assets/github-header-image.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;Програмне забезпечення AUTOMATIC1111 дуже важливе для моєї роботи, оскільки я розробляю безкоштовний open soruce додаток &lt;a class=&#34;link&#34; href=&#34;https://github.com/ShiftHackZ/Stable-Diffusion-Android&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SDAI - Android Stable Diffusion&lt;/a&gt;, який можна підключати до будь-якого сервера AUTOMATIC1111 або іншого підтримуваного провайдера генерації зображень. Мені потрібно багато різних ізольованих віртуальних серверів AUTOMATIC1111 для тестування мого Android додатку.&lt;/p&gt;
&lt;h2 id=&#34;встановлення&#34;&gt;Встановлення&lt;/h2&gt;
&lt;h3 id=&#34;створення-нової-віртуальної-машини-linux&#34;&gt;Створення нової віртуальної машини Linux&lt;/h3&gt;
&lt;p&gt;Спочатку нам потрібно створити нову віртуальну машину Linux із пропуском GPU пристроїв PCI до цієї віртуальної машини. Я вже розповідав про створення віртуальної машини в статті &amp;ldquo;&lt;a class=&#34;link&#34; href=&#34;https://blog.moroz.cc/uk/post/%d0%bf%d1%80%d0%be%d0%ba%d0%b8%d0%b4%d0%b0%d0%bd%d0%bd%d1%8f-%d0%b2%d1%96%d0%b4%d0%b5%d0%be%d0%ba%d0%b0%d1%80%d1%82%d0%b8-pci-%d0%b4%d0%be-windows-kvm-%d0%bd%d0%b0-arch-linux/#%d0%bd%d0%b0%d0%bb%d0%b0%d1%88%d1%82%d1%83%d0%b2%d0%b0%d0%bd%d0%bd%d1%8f-%d0%bd%d0%be%d0%b2%d0%be%d1%97-%d0%b2%d1%96%d1%80%d1%82%d1%83%d0%b0%d0%bb%d1%8c%d0%bd%d0%be%d1%97-%d0%bc%d0%b0%d1%88%d0%b8%d0%bd%d0%b8-%d1%82%d0%b0-%d1%83%d1%81%d1%82%d0%b0%d0%bd%d0%be%d0%b2%d0%ba%d0%b0-windows-1011&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GPU PCI passthrough to Windows KVM on Arch Linux&lt;/a&gt;&amp;rdquo;, але цього разу я використовуватиму &lt;a class=&#34;link&#34; href=&#34;https://releases.ubuntu.com/22.04/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Ubuntu Sever 22.04 LTS&lt;/a&gt; як ОС для гостьової ВМ. Я вибрав Ubuntu Server 22.04 для гостьової ОС, тому що на момент написання цієї статті (02.06.2024) це остання версія, яка підтримується пропрієтарним драйвером AMD ROCM, який необхідний для запуску штучного інтелекту на потужності GPU.&lt;/p&gt;
&lt;h3 id=&#34;оновіть-пакети-ос&#34;&gt;Оновіть пакети ОС&lt;/h3&gt;
&lt;p&gt;Після встановлення ОС перше, що вам потрібно зробити, це оновити системні пакети до останніх доступних версій.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt update
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt upgrade
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;встановіть-необхідні-пакети&#34;&gt;Встановіть необхідні пакети&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt install -y git python3-pip python3-venv python3-dev libstdc++-12-dev libgl1-mesa-glx&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;встановлення-драйвера-amd-rocm&#34;&gt;Встановлення драйвера AMD ROCM&lt;/h3&gt;
&lt;p&gt;Я використав офіційні інструкції з &lt;a class=&#34;link&#34; href=&#34;https://rocm.docs.amd.com/projects/install-on-linux/en/latest/tutorial/quick-start.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;документації AMD&lt;/a&gt;, щоб встановити драйвер ROCM.&lt;/p&gt;
&lt;p&gt;Спочатку встановіть заголовки та додаткові компоненти для поточного ядра:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt install -y &lt;span class=&#34;s2&#34;&gt;&amp;#34;linux-headers-&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;uname -r&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;linux-modules-extra-&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;uname -r&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Потім переконайтеся, що ваш поточний користувач включений до груп &lt;code&gt;video&lt;/code&gt; і &lt;code&gt;render&lt;/code&gt;. Щоб додати поточного користувача до груп, використовуйте команду:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo usermod -a -G render,video &lt;span class=&#34;nv&#34;&gt;$LOGNAME&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Завантажте інсталяційний пакет deb і встановіть його:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget https://repo.radeon.com/amdgpu-install/6.1.1/ubuntu/jammy/amdgpu-install_6.1.60101-1_all.deb
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo dpkg -i amdgpu-install_6.1.60101-1_all.deb&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Встановіть модуль DKMS і пакети rocm:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt update
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt install amdgpu-dkms rocm&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Нарешті, перезавантажте віртуальну машину:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo reboot&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;встановлення-automatic1111&#34;&gt;Встановлення AUTOMATIC1111&lt;/h3&gt;
&lt;p&gt;Найпростіший і зручний спосіб - просто клонувати офіційний репозиторій git. Після клонування перейдіть до клонованого каталогу.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; stable-diffusion-webui&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Налаштуйте віртуальне середовище Python:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python3 -m venv venv
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; venv/bin/activate&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Встановіть залежності python, необхідні AUTOMATIC1111:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip3 install -r requirements.txt&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Видаліть стандартні залежності torch та замініть їх на ROCM:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip3 uninstall torch torchvision
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/rocm6.0&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;створіть-скрипт-запуску-automatic1111&#34;&gt;Створіть скрипт запуску AUTOMATIC1111&lt;/h3&gt;
&lt;p&gt;Я буду використовувати nano для створення нового файлу &lt;code&gt;nano launch.sh&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/sh
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; venv/bin/activate
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;HSA_OVERRIDE_GFX_VERSION&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;10.3.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;HIP_VISIBLE_DEVICES&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;PYTORCH_HIP_ALLOC_CONF&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;garbage_collection_threshold:0.8,max_split_size_mb:512
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python3 launch.py --api --listen --enable-insecure-extension-access --opt-sdp-attention
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Потім збережіть файл &lt;code&gt;Ctrl + O&lt;/code&gt; і вийдіть з nano &lt;code&gt;Ctrl + X&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;запуск-automatic1111&#34;&gt;Запуск AUTOMATIC1111&lt;/h3&gt;
&lt;p&gt;Кожного разу, коли вам потрібно запустити AUTOMATIC1111, перейдіть до склонованого каталогу &lt;code&gt;stable-diffusion-webui&lt;/code&gt; і запустіть створений сценарій &lt;code&gt;launch.sh&lt;/code&gt;, як у наступному прикладі:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; stable-diffusion-webui
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bash launch.sh&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;У результаті ви побачите, що AUTOMATIC1111 працює.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/how-to-run-stable-diffusion-in-vm-on-amd-gpu-automatic1111--kvm--gpu-passthrough/a1111-launch.png&#34;
	width=&#34;1047&#34;
	height=&#34;395&#34;
	srcset=&#34;http://localhost:1313/post/how-to-run-stable-diffusion-in-vm-on-amd-gpu-automatic1111--kvm--gpu-passthrough/a1111-launch_hu7767396bc0a300c4a77346294e8113f9_23785_480x0_resize_box_3.png 480w, http://localhost:1313/post/how-to-run-stable-diffusion-in-vm-on-amd-gpu-automatic1111--kvm--gpu-passthrough/a1111-launch_hu7767396bc0a300c4a77346294e8113f9_23785_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Запущений інстанс AUTOMATIC1111.&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;265&#34;
		data-flex-basis=&#34;636px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;висновок&#34;&gt;Висновок&lt;/h2&gt;
&lt;p&gt;Stable Diffusion — це потужна модель для створення зображень із текстових описів, а AUTOMATIC1111 — це зручний інтерфейс, який полегшує ефективне використання можливостей Stable Diffusion. Разом вони забезпечують широкий спектр творчих і практичних застосувань у сфері генеративного мистецтва та синтезу зображень. Використовуючи віртуальну машину на основі KVM із прокинутим графічним адаптером AMD, ви можете створити потужне, безпечне та гнучке середовище для запуску AUTOMATIC1111 і ефективного використання можливостей Stable Diffusion.&lt;/p&gt;
&lt;h2 id=&#34;посилання&#34;&gt;Посилання&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://releases.ubuntu.com/22.04/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Ubuntu Sever 22.04 LTS Jammy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://rocm.docs.amd.com/projects/install-on-linux/en/latest/tutorial/quick-start.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;AMD ROCM Документація&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/AUTOMATIC1111/stable-diffusion-webui&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;AUTOMATIC1111&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/ShiftHackZ/Stable-Diffusion-Android&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SDAI - Stable Diffusion Android додаток&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://gist.github.com/evshiron/8cf4de34aa01e217ce178b8ed54a2c43&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Кастомний скрипт запуску stable-diffusion-webui&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Прокидання відеокарти PCI до Windows KVM на Arch Linux</title>
        <link>http://localhost:1313/uk/post/%D0%BF%D1%80%D0%BE%D0%BA%D0%B8%D0%B4%D0%B0%D0%BD%D0%BD%D1%8F-%D0%B2%D1%96%D0%B4%D0%B5%D0%BE%D0%BA%D0%B0%D1%80%D1%82%D0%B8-pci-%D0%B4%D0%BE-windows-kvm-%D0%BD%D0%B0-arch-linux/</link>
        <pubDate>Mon, 18 Mar 2024 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/uk/post/%D0%BF%D1%80%D0%BE%D0%BA%D0%B8%D0%B4%D0%B0%D0%BD%D0%BD%D1%8F-%D0%B2%D1%96%D0%B4%D0%B5%D0%BE%D0%BA%D0%B0%D1%80%D1%82%D0%B8-pci-%D0%B4%D0%BE-windows-kvm-%D0%BD%D0%B0-arch-linux/</guid>
        <description>&lt;img src="http://localhost:1313/post/gpu-pci-passthrough-to-windows-kvm-on-arch-linux/header.webp" alt="Featured image of post Прокидання відеокарти PCI до Windows KVM на Arch Linux" /&gt;&lt;h2 id=&#34;вступ&#34;&gt;Вступ&lt;/h2&gt;
&lt;p&gt;Прокидання GPU в KVM відноситься до процесу безпосереднього призначення фізичного GPU (графічного пристрою) віртуальній машині, що працює на гіпервізорі KVM. Це дозволяє віртуальній машині мати виключний доступ до GPU, обійшовши практично віртуалізаційний шар гіпервізора.&lt;/p&gt;
&lt;p&gt;Для багатьох це може звучати складно, але з Linux та KVM це насправді легко, і налаштування включає наступні 5 кроків:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Перевірка GPU&lt;/strong&gt;. Перший крок - переконатися, що GPU, який ви хочете передати, сумісний з вашим обладнанням і підтримує необхідні функції для прохідного доступу. Це часто потребує підтримки VT-d (віртуалізаційна технологія Intel для прямого введення/виведення) або AMD-Vi (AMD віртуалізація I/O) на процесорі, а також IOMMU (одиниця управління пам&amp;rsquo;яттю введення/виведення) на материнській платі.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Налаштування хоста&lt;/strong&gt;. Вам потрібно налаштувати систему хоста для активації IOMMU, VT-d або AMD-Vi в налаштуваннях BIOS/UEFI, а також завантажити необхідні модулі ядра та драйвери.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ізоляція GPU&lt;/strong&gt;. GPU, призначений для прохідного доступу, потрібно ізолювати від операційної системи хоста таким чином, щоб його можна було виключно призначити для віртуальної машини. Це зазвичай робиться шляхом блокування завантаження драйвера GPU на хості.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Налаштування віртуальної машини&lt;/strong&gt;. У межах налаштування KVM ви налаштовуєте віртуальну машину для використання GPU, що прокидується. Це включає вказівку GPU як пристрій PCI для передачі до ВМ.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Встановлення драйверів&lt;/strong&gt;. Після передачі GPU віртуальній машині ви встановлюєте необхідні драйвери в гостьовій операційній системі так само, як і на фізичній машині.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;вимоги-до-обладнання&#34;&gt;Вимоги до обладнання&lt;/h2&gt;
&lt;p&gt;Важливо відзначити, що для такого типу налаштувань необхідно, щоб ваше обладнання відповідало вимогам.&lt;/p&gt;
&lt;h3 id=&#34;цп-процесор&#34;&gt;ЦП (процесор)&lt;/h3&gt;
&lt;p&gt;Ваш процесор повинен підтримувати розширення апаратної віртуалізації, такі як Intel VT-x (Intel Virtualization Technology) або AMD-V (AMD Virtualization). Крім того, для пропускання GPU вам знадобиться підтримка розширень Intel VT-d (Intel Virtualization Technology for Directed I/O) або AMD-Vi (AMD Virtualization I/O), які дозволяють прямий доступ до пристроїв вводу-виводу з віртуальних машин.&lt;/p&gt;
&lt;h3 id=&#34;материнська-плата&#34;&gt;Материнська плата&lt;/h3&gt;
&lt;p&gt;Ваша материнська плата повинна мати IOMMU (Input-Output Memory Management Unit), яка підтримує ізоляцію та пропускання пристроїв PCIe. Більшість сучасних материнських плат мають цю функцію, але вам слід перевірити специфікації вашої материнської плати, щоб переконатися в сумісності.&lt;/p&gt;
&lt;h3 id=&#34;gpu-графічний-процесор&#34;&gt;GPU (графічний процесор)&lt;/h3&gt;
&lt;p&gt;Ваш графічний процесор повинен підтримувати UEFI. Ідеальним вибором буде GPU, який підтримує необхідні функції для пропускання, такі як GPU серії AMD Radeon Pro або Nvidia Quadro, оскільки в GPU для споживачів можуть бути обмеження або вимагати обхідних шляхів.&lt;/p&gt;
&lt;h2 id=&#34;налаштування-пропускання-gpu&#34;&gt;Налаштування пропускання GPU&lt;/h2&gt;
&lt;h3 id=&#34;перегляньте-ваше-обладнання&#34;&gt;Перегляньте ваше обладнання&lt;/h3&gt;
&lt;p&gt;Першим кроком для налаштування є перегляд вашого обладнання. Якщо ви хочете досягти такого ж налаштування, як у моєму випадку, переконайтеся, що у вас є 2 відеокарти (або принаймні одна зовнішня відеокарта PCI).&lt;/p&gt;
&lt;p&gt;Специфікації мого обладнання:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Материнська плата&lt;/strong&gt;: &lt;a class=&#34;link&#34; href=&#34;https://www.msi.com/Motherboard/MPG-Z490-GAMING-EDGE-WIFI&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;MSI MPG z490 Gaming Edge WiFi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ЦП&lt;/strong&gt;: &lt;a class=&#34;link&#34; href=&#34;https://ark.intel.com/content/www/us/en/ark/products/205904/intel-core-i9-10850k-processor-20m-cache-up-to-5-20-ghz.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Intel Core i9-10850K&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GPU 1&lt;/strong&gt;: &lt;a class=&#34;link&#34; href=&#34;https://www.amd.com/en/products/graphics/amd-radeon-rx-6750-xt&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;AMD Radeon RX 6750XT&lt;/a&gt; (для &lt;strong&gt;HOST&lt;/strong&gt; Linux)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GPU 2&lt;/strong&gt;: &lt;a class=&#34;link&#34; href=&#34;https://www.amd.com/en/products/graphics/amd-radeon-rx-6600&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;AMD Radeon RX 6600&lt;/a&gt; (для &lt;strong&gt;GUEST&lt;/strong&gt; Windows)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Монітори&lt;/strong&gt;: 2 x FullHD 1920x1080 @ 75 Гц&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/gpu-pci-passthrough-to-windows-kvm-on-arch-linux/gpu_hardware.jpg&#34;
	width=&#34;3746&#34;
	height=&#34;2036&#34;
	srcset=&#34;http://localhost:1313/post/gpu-pci-passthrough-to-windows-kvm-on-arch-linux/gpu_hardware_hu97ab0ced7aba4c11837f469742ea3a36_1335483_480x0_resize_q75_box.jpg 480w, http://localhost:1313/post/gpu-pci-passthrough-to-windows-kvm-on-arch-linux/gpu_hardware_hu97ab0ced7aba4c11837f469742ea3a36_1335483_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Обладнання PCIE - Робоча станція з двома відеокартами&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;183&#34;
		data-flex-basis=&#34;441px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;встановлення-та-налаштування-kvm&#34;&gt;Встановлення та налаштування KVM&lt;/h3&gt;
&lt;p&gt;Цей посібник написаний з припущенням, що у вас вже працює система Linux з встановленим та налаштованим KVM (libvirt) та програмним забезпеченням для керування вашими віртуальними машинами (virt-manager, virt-viewer).&lt;/p&gt;
&lt;p&gt;Якщо у вас ще не встановлено KVM, перегляньте мій інший посібник: &lt;a class=&#34;link&#34; href=&#34;http://blog.moroz.cc/post/how-to-install-kvm-on-arch-linux&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Як встановити KVM на Arch Linux&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;зміна-налаштувань-bios-материнської-плати&#34;&gt;Зміна налаштувань BIOS материнської плати&lt;/h3&gt;
&lt;p&gt;Для того щоб KVM працював на вашій системі, технологія віртуалізації повинна бути включена. Вона може мати різні назви залежно від виробника материнської плати/процесора, але зазвичай це VT-D для Intel та AMD-Vi для AMD відповідно.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/gpu-pci-passthrough-to-windows-kvm-on-arch-linux/bios_virtualization.png&#34;
	width=&#34;1920&#34;
	height=&#34;1092&#34;
	srcset=&#34;http://localhost:1313/post/gpu-pci-passthrough-to-windows-kvm-on-arch-linux/bios_virtualization_huf7014b7053b344cd9708e2f10498c428_803597_480x0_resize_box_3.png 480w, http://localhost:1313/post/gpu-pci-passthrough-to-windows-kvm-on-arch-linux/bios_virtualization_huf7014b7053b344cd9708e2f10498c428_803597_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Приклад налаштувань віртуалізації на материнській платі MSI Z490 і процесорі Intel&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;175&#34;
		data-flex-basis=&#34;421px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Якщо у вас є налаштування BIOS з інтегрованою графікою в процесорі, вам також потрібно буде змінити пріоритет ініціалізації графіки. Це потрібно для того, щоб запобігти ініціалізації зовнішнього GPU при старті BIOS POST, і делегувати відеосигнал інтегрованій графіці. У моєму випадку цей крок не потрібний, оскільки у мене є 2 зовнішні PCI GPU.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/gpu-pci-passthrough-to-windows-kvm-on-arch-linux/bios_gpu_init_priority.png&#34;
	width=&#34;1920&#34;
	height=&#34;1096&#34;
	srcset=&#34;http://localhost:1313/post/gpu-pci-passthrough-to-windows-kvm-on-arch-linux/bios_gpu_init_priority_hu64bd15e6f51b66c8d6bf8931fb02e17f_754389_480x0_resize_box_3.png 480w, http://localhost:1313/post/gpu-pci-passthrough-to-windows-kvm-on-arch-linux/bios_gpu_init_priority_hu64bd15e6f51b66c8d6bf8931fb02e17f_754389_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Приклад налаштувань ініціалізації GPU на материнській платі MSI Z490&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;175&#34;
		data-flex-basis=&#34;420px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;увімкнення-iommu&#34;&gt;Увімкнення IOMMU&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;IOMMU - це загальна назва для Intel VT-d та AMD-Vi.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Для включення IOMMU в системі Linux вам слід передати правильний параметр завантаження ядра. Додавання параметрів завантаження ядра може відрізнятися в залежності від того, який завантажувач ви використовуєте.&lt;/p&gt;
&lt;p&gt;Якщо ви використовуєте:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Процесор Intel&lt;/strong&gt; - додайте прапори: &lt;code&gt;intel_iommu=on iommu=pt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Процесор AMD&lt;/strong&gt; - додайте прапори: &lt;code&gt;iommu=pt&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;У випадку процесорів AMD ядро визначає, чи має бути увімкнений IOMMU з BIOS, і &lt;code&gt;iommu=pt&lt;/code&gt; запобігає обробці пристроїв, які не можуть бути пропущені через IOMMU.&lt;/p&gt;
&lt;h4 id=&#34;варіант-1-grub&#34;&gt;Варіант 1: GRUB&lt;/h4&gt;
&lt;p&gt;Якщо ви використовуєте grub як свій завантажувач, ви можете змінити параметри ядра в файлі &lt;code&gt;/etc/default/grub&lt;/code&gt; та додати прапори до параметрів &lt;code&gt;GRUB_CMDLINE_LINUX&lt;/code&gt;, наприклад:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;GRUB_CMDLINE_LINUX&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;quiet splash intel_iommu=on iommu=pt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Потім збережіть файл і перегенеруйте конфігурацію вашого GRUB за допомогою команди:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo grub-mkconfig -o /boot/grub/grub.cfg&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;опція-2-завантаження-через-systemd-boot&#34;&gt;Опція 2: Завантаження через systemd Boot&lt;/h4&gt;
&lt;p&gt;Якщо ви використовуєте завантажувач systemd boot, вам потрібно відредагувати файл вашого завантаження. У моєму випадку цей файл розташований за адресою &lt;code&gt;/boot/loader/entries/arch.conf&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Параметри ядра слід додати в кінець параметра &lt;code&gt;options&lt;/code&gt;, наприклад:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;options rw quiet splash &lt;span class=&#34;nv&#34;&gt;intel_iommu&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;on &lt;span class=&#34;nv&#34;&gt;iommu&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;pt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Після додавання правильних параметрів ядра до вашого завантажувача, перезавантажте комп&amp;rsquo;ютер.&lt;/p&gt;
&lt;h3 id=&#34;перевірка-групування-iommu&#34;&gt;Перевірка групування IOMMU&lt;/h3&gt;
&lt;p&gt;Група IOMMU (Input-Output Memory Management Unit) - це логічне об&amp;rsquo;єднання пристроїв, які контролюються тією ж самою IOMMU. Основна мета групи IOMMU полягає в тому, щоб сприяти ізоляції та управлінню пристроями в віртуалізованих середовищах, зокрема при використанні технологій пропускання GPU.&lt;/p&gt;
&lt;p&gt;Важливо, щоб у тій самій групі IOMMU були лише пристрої, пов&amp;rsquo;язані з GPU, який ви маєте намір пропустити через них. Оскільки, якщо ви маєте щось інше, воно також повинно бути передане в ВМ, інакше пропускання не працюватиме.&lt;/p&gt;
&lt;p&gt;Ви можете скористатися наступним скриптом, щоб перевірити ваші групи iommu:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;shopt&lt;/span&gt; -s nullglob
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; g in &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;find /sys/kernel/iommu_groups/* -maxdepth &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; -type d &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sort -V&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;IOMMU Group &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;##*/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;:&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; d in &lt;span class=&#34;nv&#34;&gt;$g&lt;/span&gt;/devices/*&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; -e &lt;span class=&#34;s2&#34;&gt;&amp;#34;\t&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;lspci -nns &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;##*/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Вам потрібно зберегти вміст скрипта у файл (наприклад, &lt;code&gt;iommu.sh&lt;/code&gt;) і зробити цей файл виконуваним (&lt;code&gt;chmod +x iommu.sh&lt;/code&gt;), після чого ви можете просто запустити його за допомогою &lt;code&gt;./iommu.sh&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;У моєму випадку групи IOMMU такі:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IOMMU Group 0:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	00:00.0 Host bridge &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;0600&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;: Intel Corporation Comet Lake-S 6c Host Bridge/DRAM Controller &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;8086:9b33&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;rev 05&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IOMMU Group 1:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	00:01.0 PCI bridge &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;0604&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;: Intel Corporation 6th-10th Gen Core Processor PCIe Controller &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;x16&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;8086:1901&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;rev 05&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	01:00.0 PCI bridge &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;0604&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;: Advanced Micro Devices, Inc. &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;AMD/ATI&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; Navi &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt; XL Upstream Port of PCI Express Switch &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;1002:1478&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;rev c0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	02:00.0 PCI bridge &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;0604&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;: Advanced Micro Devices, Inc. &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;AMD/ATI&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; Navi &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt; XL Downstream Port of PCI Express Switch &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;1002:1479&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	03:00.0 VGA compatible controller &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;0300&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;: Advanced Micro Devices, Inc. &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;AMD/ATI&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; Navi &lt;span class=&#34;m&#34;&gt;22&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;Radeon RX 6700/6700 XT/6750 XT / 6800M/6850M XT&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;1002:73df&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;rev c0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	03:00.1 Audio device &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;0403&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;: Advanced Micro Devices, Inc. &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;AMD/ATI&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; Navi 21/23 HDMI/DP Audio Controller &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;1002:ab28&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IOMMU Group 18:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	07:00.0 VGA compatible controller &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;0300&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;: Advanced Micro Devices, Inc. &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;AMD/ATI&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; Navi &lt;span class=&#34;m&#34;&gt;23&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;Radeon RX 6600/6600 XT/6600M&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;1002:73ff&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;rev c7&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IOMMU Group 19:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	07:00.1 Audio device &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;0403&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;: Advanced Micro Devices, Inc. &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;AMD/ATI&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; Navi 21/23 HDMI/DP Audio Controller &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;1002:ab28&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;Переконайтеся, що GPU та пов&amp;rsquo;язані з ним пристрої не згруповані з іншими критичними системними пристроями (наприклад, контролерами USB, контролерами Ethernet), які ви не маєте наміру передавати у віртуальну машину. Важливо, щоб GPU був у власній ізольованій групі IOMMU для надійного пропускання.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;У цьому випадку &lt;strong&gt;AMD RX 6600 GPU&lt;/strong&gt;, який я хочу передати до ВМ, має 2 пристрої &lt;strong&gt;07:00.0&lt;/strong&gt; і &lt;strong&gt;07:00.1&lt;/strong&gt;, кожен у окремій групі IOMMU &lt;strong&gt;18&lt;/strong&gt; і &lt;strong&gt;19&lt;/strong&gt;, і жодні інші пристрої не знаходяться в групах &lt;strong&gt;18&lt;/strong&gt; і &lt;strong&gt;19&lt;/strong&gt;. Це означає, що я можу пропускати його без проблем.&lt;/p&gt;
&lt;p&gt;Якщо ми подивимося на пристрої для &lt;strong&gt;AMD RX 6750 XT&lt;/strong&gt;, які є &lt;strong&gt;03:00.0&lt;/strong&gt; і &lt;strong&gt;03:00.1&lt;/strong&gt; у групі IOMMU &lt;strong&gt;1&lt;/strong&gt;, також є деякі пристрої PCI-мосту, які в теорії не заважатимуть пропусканню цього GPU, поки ви також передасте ці PCI-мости до ВМ. Справжньою проблемою було б, якщо, наприклад, група IOMMU &lt;strong&gt;1&lt;/strong&gt; містила б інший PCI-пристрій (наприклад, мост USB або звукову карту).&lt;/p&gt;
&lt;p&gt;У випадку, якщо у вас більше пристроїв, ніж вам потрібно в групі IOMMU з GPU, ви можете спробувати:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Якщо ваша материнська плата має багато слотів PCI Express, спробуйте встановити GPU в різні слоти PCI Express і подивіться, чи допоможе це.&lt;/li&gt;
&lt;li&gt;У випадку, якщо ви не можете знайти оптимальну групу IOMMU без зайвих пристроїв, ви можете патчити свій ядро Linux з патчем &lt;strong&gt;ACS Override&lt;/strong&gt; (але це виходить за рамки цієї статті).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ізолюйте-ваш-gpu&#34;&gt;Ізолюйте ваш GPU&lt;/h3&gt;
&lt;p&gt;Ізоляція GPU - це процес забезпечення того, що GPU доступний виключно для використання конкретною віртуальною машиною, зазвичай шляхом прив&amp;rsquo;язки його до драйвера VFIO (Virtual Function I/O). Цей процес включає кілька кроків для запобігання використання GPU операційною системою хоста або іншими віртуальними машинами:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Відв&amp;rsquo;язка від драйвера хоста&lt;/strong&gt;. Спочатку GPU зазвичай прив&amp;rsquo;язаний до драйвера, який використовується операційною системою хоста для звичайних графічних операцій. Для ізоляції GPU цю прив&amp;rsquo;язку потрібно скасувати, щоб GPU міг бути вибраний драйвером VFIO. Цей крок фактично відокремлює GPU від операційної системи хоста.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Прив&amp;rsquo;язка до драйвера VFIO&lt;/strong&gt;. Після відв&amp;rsquo;язки від драйвера хоста GPU прив&amp;rsquo;язується до драйвера VFIO, що дозволяє його передавати до віртуальної машини. Драйвер VFIO надає необхідну функціональність для прямого призначення пристроїв (DDA) в віртуалізованих середовищах, забезпечуючи доступність GPU для віртуальної машини.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ізоляція означає, що після того, як ви завантажите вашу хостову операційну систему Linux, ви не зможете використовувати ізольований GPU (який прив&amp;rsquo;язаний до драйвера &lt;code&gt;vfio&lt;/code&gt;), ви можете використовувати його лише для передачі в ВМ.&lt;/p&gt;
&lt;p&gt;Для ізоляції GPU вам потрібно знати ідентифікатори пристроїв вашої відеокарти та аудіовиходу PCI. Ви можете використовувати скрипт &lt;code&gt;iommu.sh&lt;/code&gt; з попереднього кроку, щоб отримати цю інформацію. У моєму випадку ідентифікатори пристроїв - &lt;code&gt;1002:73df&lt;/code&gt; і &lt;code&gt;1002:ab28&lt;/code&gt;.&lt;/p&gt;
&lt;h4 id=&#34;раннє-завантаження-vfio&#34;&gt;Раннє завантаження VFIO&lt;/h4&gt;
&lt;p&gt;Щоб завантажити vfio ранніше та прив&amp;rsquo;язати необхідний GPU до vfio, створіть конфігураційний файл за адресою &lt;code&gt;/etc/modprobe.d/vfio.conf&lt;/code&gt;, який у моєму випадку виглядає наступним чином:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;softdep amdgpu pre: vfio-pci
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;options vfio-pci &lt;span class=&#34;nv&#34;&gt;ids&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1002:73ff,1002:ab28 &lt;span class=&#34;nv&#34;&gt;disable_vga&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; kvm.ignore_msrs&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Тут рядок &lt;code&gt;softdep amdgpu pre: vfio-pci&lt;/code&gt; дозволяє примусово завантажити драйвер &lt;code&gt;vfio-pci&lt;/code&gt; перед драйвером &lt;code&gt;amdgpu&lt;/code&gt;. Мені це потрібно через те, що у мене є 2 зовнішні PCI GPU від одного виробника, і це дозволяє прив&amp;rsquo;язати GPU RX 6600 до драйвера &lt;code&gt;vfio-pci&lt;/code&gt;, а потім прив&amp;rsquo;язати RX 6750 XT до драйвера &lt;code&gt;amdgpu&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;У вашому випадку, якщо у вас є GPU NVidia, то &lt;code&gt;vfio-pci&lt;/code&gt; повинен бути завантажений перед драйвером &lt;code&gt;nvidia&lt;/code&gt; (пропрітарним) або перед драйвером &lt;code&gt;nouveau&lt;/code&gt; (вільним).&lt;/p&gt;
&lt;h4 id=&#34;налаштування-initramfs&#34;&gt;Налаштування initramfs&lt;/h4&gt;
&lt;p&gt;У моєму випадку я використовую &lt;code&gt;mkinitcpio&lt;/code&gt; як збирач initramfs. Для налаштування mkinitcpio відредагуйте файл &lt;code&gt;/etc/mkinitcpio.conf&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Додайте необхідні модулі до масиву &lt;code&gt;MODULES&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;MODULES&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=(&lt;/span&gt;vfio_pci vfio vfio_iommu_type1&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Потім переконайтеся, що у вас визначений хук &lt;code&gt;modconf&lt;/code&gt; у масиві &lt;code&gt;HOOKS&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;HOOKS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=(&lt;/span&gt;... modconf ...&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Збережіть файл, а потім виконайте команду для регенерації initramfs:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo mkinitcpio -P&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Після цього потрібно перезавантажити комп&amp;rsquo;ютер, щоб зміни вступили в силу.&lt;/p&gt;
&lt;h3 id=&#34;налаштування-нової-віртуальної-машини-та-установка-windows-1011&#34;&gt;Налаштування нової віртуальної машини та установка Windows 10/11&lt;/h3&gt;
&lt;p&gt;Тепер час налаштувати нову віртуальну машину та встановити нову операційну систему Windows. Я рекомендую налаштовувати та встановлювати Windows без будь-яких переданих PCI-пристроїв, і додати їх до віртуальної машини пізніше після завершення встановлення.&lt;/p&gt;
&lt;p&gt;Все налаштування легше виконувати за допомогою графічного додатка &lt;code&gt;virt-manager&lt;/code&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Відкрийте додаток &lt;code&gt;virt-manager&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Натисніть &amp;ldquo;Нова віртуальна машина&amp;rdquo;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Виберіть локальний носій для встановлення. Зазвичай це файл образу iso Windows 10/11, який можна завантажити з веб-сайту Microsoft.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/gpu-pci-passthrough-to-windows-kvm-on-arch-linux/vm1.png&#34;
	width=&#34;493&#34;
	height=&#34;493&#34;
	srcset=&#34;http://localhost:1313/post/gpu-pci-passthrough-to-windows-kvm-on-arch-linux/vm1_hud1da5726c23f6ca5ceeeedf63d3929ba_30710_480x0_resize_box_3.png 480w, http://localhost:1313/post/gpu-pci-passthrough-to-windows-kvm-on-arch-linux/vm1_hud1da5726c23f6ca5ceeeedf63d3929ba_30710_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Virt Manager - Локальний образ для встановлення ОС&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Перейдіть до вашого файлу &lt;code&gt;iso&lt;/code&gt; Windows 10/11. Рекомендується розташувати ваш iso десь у вашій домашній теки користувача, щоб уникнути проблем з правами доступу до файлів. Також важливо переконатися, що операційна система ідентифікована як &amp;ldquo;Windows 10&amp;rdquo; або &amp;ldquo;Windows 11&amp;rdquo; у нижньому полі.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/gpu-pci-passthrough-to-windows-kvm-on-arch-linux/vm2.png&#34;
	width=&#34;494&#34;
	height=&#34;491&#34;
	srcset=&#34;http://localhost:1313/post/gpu-pci-passthrough-to-windows-kvm-on-arch-linux/vm2_hu8b2a172ea9cf6f94d3260c46e03c9cc9_29983_480x0_resize_box_3.png 480w, http://localhost:1313/post/gpu-pci-passthrough-to-windows-kvm-on-arch-linux/vm2_hu8b2a172ea9cf6f94d3260c46e03c9cc9_29983_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Virt Manager - Шлях до ISO та тип операційної системи&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;241px&#34;
	
&gt;&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;Виділіть CPU та пам&amp;rsquo;ять. Переконайтеся, що зарезервовано принаймні 2 ядра CPU та деяку кількість оперативної пам&amp;rsquo;яті для вашої системи хоста Linux, щоб вона могла керувати мережею та іншими процесами. У моєму випадку я виділив 2 ядра CPU та 8 Гб оперативної пам&amp;rsquo;яті для ВМ, ви можете виділити більше, якщо потрібно.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/gpu-pci-passthrough-to-windows-kvm-on-arch-linux/vm3.png&#34;
	width=&#34;494&#34;
	height=&#34;492&#34;
	srcset=&#34;http://localhost:1313/post/gpu-pci-passthrough-to-windows-kvm-on-arch-linux/vm3_hu7e09e21a5b0ae0216eddeaa7e4eadbde_21842_480x0_resize_box_3.png 480w, http://localhost:1313/post/gpu-pci-passthrough-to-windows-kvm-on-arch-linux/vm3_hu7e09e21a5b0ae0216eddeaa7e4eadbde_21842_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Virt Manager - Виділення системних ресурсів&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;Увімкніть зберігання для цієї віртуальної машини та створіть образ диску. Я рекомендую виділити принаймні 50 Гб для віртуальної машини Windows.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/gpu-pci-passthrough-to-windows-kvm-on-arch-linux/vm4.png&#34;
	width=&#34;491&#34;
	height=&#34;490&#34;
	srcset=&#34;http://localhost:1313/post/gpu-pci-passthrough-to-windows-kvm-on-arch-linux/vm4_hub8dd65feaf891b32fb4a17ed6ad50dbb_26623_480x0_resize_box_3.png 480w, http://localhost:1313/post/gpu-pci-passthrough-to-windows-kvm-on-arch-linux/vm4_hub8dd65feaf891b32fb4a17ed6ad50dbb_26623_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Virt Manager - Виділення дискового простору&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Потім &lt;strong&gt;НЕ НАТИСКАЙТЕ FINISH&lt;/strong&gt;, і виконайте наступне:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Переконайтеся, що увімкнено &amp;ldquo;Customize Configuration before install&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;Дайте вашій ВМ назву.&lt;/li&gt;
&lt;li&gt;У виборі мережі оберіть &amp;ldquo;Пристрій хоста [ваш ID пристрою] -&amp;gt; Source Mode -&amp;gt; Bridge або NAT&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;Тепер ви можете натиснути &amp;ldquo;Finish&amp;rdquo;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/gpu-pci-passthrough-to-windows-kvm-on-arch-linux/vm5.png&#34;
	width=&#34;492&#34;
	height=&#34;490&#34;
	srcset=&#34;http://localhost:1313/post/gpu-pci-passthrough-to-windows-kvm-on-arch-linux/vm5_hu8bb678709bd41e61d47911e8b1ccbfdd_37141_480x0_resize_box_3.png 480w, http://localhost:1313/post/gpu-pci-passthrough-to-windows-kvm-on-arch-linux/vm5_hu8bb678709bd41e61d47911e8b1ccbfdd_37141_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Virt Manager - Назва ВМ, віртуальний мережевий адаптер&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Переконайтеся, що в «Огляді» вибрано чіпсет &lt;strong&gt;Q35&lt;/strong&gt; і мікропрограму &lt;strong&gt;UEFI&lt;/strong&gt;. GPU Passthrough не працюватиме в мікропрограмі BIOS, для цього потрібно використовувати &lt;strong&gt;UEFI&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/gpu-pci-passthrough-to-windows-kvm-on-arch-linux/vm6.png&#34;
	width=&#34;1015&#34;
	height=&#34;802&#34;
	srcset=&#34;http://localhost:1313/post/gpu-pci-passthrough-to-windows-kvm-on-arch-linux/vm6_hu04fc1b4bbb4415316705e4c130490e44_71785_480x0_resize_box_3.png 480w, http://localhost:1313/post/gpu-pci-passthrough-to-windows-kvm-on-arch-linux/vm6_hu04fc1b4bbb4415316705e4c130490e44_71785_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Virt Manager - Конфігураціятипу та прошивки чіпсета (Q35 UEFI).&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;126&#34;
		data-flex-basis=&#34;303px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Потім натисніть &amp;ldquo;Begin installation&amp;rdquo; та встановіть Windows, як зазвичай. Після встановлення системи перейдіть до наступного кроку.&lt;/p&gt;
&lt;h3 id=&#34;налаштування-певних-параметрів-вм&#34;&gt;Налаштування певних параметрів ВМ&lt;/h3&gt;
&lt;p&gt;Є необхідність додати деякі параметри, що дозволяють приховати той факт, що ви використовуєте віртуальну машину від програми встановлення драйверів GPU.&lt;/p&gt;
&lt;p&gt;Для редагування налаштувань ВМ переконайтеся, що ваша ВМ не запущена, і введіть цю команду в термінал:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo virsh edit win10&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;де ви повинні замінити &lt;code&gt;win10&lt;/code&gt; на ім&amp;rsquo;я вашої ВМ.&lt;/p&gt;
&lt;p&gt;Потім виконайте наступні зміни в файлі XML в редакторі:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Додайте &lt;code&gt;&amp;lt;vendor_id state=&#39;on&#39; value=&#39;randomid&#39;/&amp;gt;&lt;/code&gt; до розділу &lt;code&gt;&amp;lt;hyperv&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Додайте &lt;code&gt;&amp;lt;kvm&amp;gt;&amp;lt;hidden state=&#39;on&#39;/&amp;gt;&amp;lt;/kvm&amp;gt;&lt;/code&gt; до розділу &lt;code&gt;&amp;lt;features&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;В результаті структура повинна виглядати так:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;features&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  ...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;lt;hyperv&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    ...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;lt;vendor_id &lt;span class=&#34;nv&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;on&amp;#39;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;randomid&amp;#39;&lt;/span&gt;/&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    ...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;lt;/hyperv&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;lt;kvm&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;lt;hidden &lt;span class=&#34;nv&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;on&amp;#39;&lt;/span&gt;/&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;lt;/kvm&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  ...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;/features&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;прокидання-gpu-до-вм&#34;&gt;Прокидання GPU до ВМ&lt;/h3&gt;
&lt;p&gt;У програмі &lt;code&gt;virt-manager&lt;/code&gt; відкрийте налаштування вашої ВМ та перейдіть до відповідних налаштувань, де потрібно додати 2 PCI-пристрої хоста, пов&amp;rsquo;язані з GPU, який ви маєте намір пропустити.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Натисніть &amp;ldquo;Додати пристрої PCI&amp;rdquo;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Натисніть &amp;ldquo;Додати обладнання&amp;rdquo;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Виберіть PCI-пристрій хоста&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Прокрутіть вниз, поки не знайдете GPU, який ви хочете пропустити. Ідентифікатори повинні відповідати виводам з попереднього етапу. Наприклад, у моєму випадку:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0000:07:00:0&lt;/code&gt; Advanced Micro Devices, Inc. [AMD/ATI] Navi 23 [Radeon RX 6600/6600 XT/6600M]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0000:07:00:1&lt;/code&gt; Advanced Micro Devices, Inc. [AMD/ATI] Navi 21/23 HDMI/DP Audio Controller [1002:ab28]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Вам потрібно це зробити двічі для відеопристрою та аудіопристрою GPU відповідно.&lt;/p&gt;
&lt;p&gt;Потім, якщо у вас є другий монітор, спробуйте підключити його до відеовиходу GPU, який ви пропустили до ВМ, та завантажте ВМ. Якщо все налаштовано правильно, ви повинні побачити відеовихід ВМ на окремому моніторі.&lt;/p&gt;
&lt;h3 id=&#34;встановлення-драйверів-gpu&#34;&gt;Встановлення драйверів GPU&lt;/h3&gt;
&lt;p&gt;Після успішного завантаження вашої Windows ВМ з зовнішнім GPU, час завантажити та встановити останні версії драйверів від виробника вашого GPU.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.nvidia.com/download/index.aspx?lang=en&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Офіційні драйвери для GPU Nvidia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.amd.com/en/support&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Офіційні драйвери для GPU AMD&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;висновок&#34;&gt;Висновок&lt;/h2&gt;
&lt;p&gt;Налаштована віртуальна машина Windows з пропусканням GPU може обробляти певні графічні програми (наприклад, геймінг або відеомонтаж) з майже нативною продуктивністю, що дозволяє використовувати вашу основну систему Linux та гостьову систему Windows одночасно.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/post/gpu-pci-passthrough-to-windows-kvm-on-arch-linux/gpu_passthrough_result.jpg&#34;
	width=&#34;4080&#34;
	height=&#34;1292&#34;
	srcset=&#34;http://localhost:1313/post/gpu-pci-passthrough-to-windows-kvm-on-arch-linux/gpu_passthrough_result_hu40470e4ad5c8bfabf5c3a6e3ec8ddc81_1848343_480x0_resize_q75_box.jpg 480w, http://localhost:1313/post/gpu-pci-passthrough-to-windows-kvm-on-arch-linux/gpu_passthrough_result_hu40470e4ad5c8bfabf5c3a6e3ec8ddc81_1848343_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Результат GPU Passthrough: Windows ВМ ліворуч, Linux host праворуч&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;315&#34;
		data-flex-basis=&#34;757px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Переваги пропускання GPU в KVM включають:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Покращена продуктивність: Шляхом безпосереднього доступу до фізичного GPU віртуальна машина може досягти майже нативної продуктивності для графічно інтенсивних завдань, таких як геймінг, відеомонтаж та 3D-моделювання.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Зменшення накладних витрат: Оскільки віртуальна машина обходить віртуалізаційний шар гіпервізора для операцій з GPU, накладні витрати менше порівняно з традиційними техніками віртуалізації GPU, такими як емуляція GPU або віртуальні рішення GPU (vGPU).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Підтримка завдань з апаратним прискоренням GPU: Пропускання GPU дозволяє віртуальним машинам використовувати апаратне прискорення для завдань, які покладаються на обробку GPU, що призводить до швидшого виконання та покращеної ефективності.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Сумісність з програмним забезпеченням, яке вимагає GPU: Деякі програми та робочі процеси вимагають прямого доступу до фізичного GPU, що можливо не здійснюється за допомогою віртуальних рішень GPU. Пропускання GPU дозволяє такому програмному забезпеченню працювати безперешкодно в віртуалізованому середовищі.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Геймінг: Гравці можуть скористатися пропусканням GPU, запускаючи ігри в межах віртуальної машини з мінімальним зниженням продуктивності, що дозволяє використовувати апаратно-прискорену графіку без подвійного завантаження або виділення окремої фізичної машини для геймінгу.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Встановлення системи віртуалізації KVM на Arch Linux</title>
        <link>http://localhost:1313/uk/post/%D0%B2%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%BB%D0%B5%D0%BD%D0%BD%D1%8F-%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC%D0%B8-%D0%B2%D1%96%D1%80%D1%82%D1%83%D0%B0%D0%BB%D1%96%D0%B7%D0%B0%D1%86%D1%96%D1%97-kvm-%D0%BD%D0%B0-arch-linux/</link>
        <pubDate>Fri, 15 Mar 2024 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/uk/post/%D0%B2%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%BB%D0%B5%D0%BD%D0%BD%D1%8F-%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC%D0%B8-%D0%B2%D1%96%D1%80%D1%82%D1%83%D0%B0%D0%BB%D1%96%D0%B7%D0%B0%D1%86%D1%96%D1%97-kvm-%D0%BD%D0%B0-arch-linux/</guid>
        <description>&lt;img src="http://localhost:1313/post/how-to-install-kvm-on-arch-linux/header.png" alt="Featured image of post Встановлення системи віртуалізації KVM на Arch Linux" /&gt;&lt;h2 id=&#34;вступ&#34;&gt;Вступ&lt;/h2&gt;
&lt;p&gt;KVM, що означає Kernel-based Virtual Machine (віртуальна машина на базі ядра), є рішенням для віртуалізації в операційних системах Linux. Воно дозволяє запускати кілька віртуальних машин (ВМ) на одній фізичній машині за допомогою вбудованих у сучасні процесори функцій віртуалізації апаратного забезпечення.&lt;/p&gt;
&lt;p&gt;Ось розбір того, що пропонує KVM:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Гіпервізор&lt;/strong&gt;: KVM діє як гіпервізор, що є частиною програмного забезпечення, яке створює та запускає віртуальні машини. Воно використовує розширення віртуалізації, які присутні в сучасних процесорах (такі як Intel VT-x або AMD-V), для забезпечення апаратно-допомаганої віртуалізації.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Інтеграція з ядром&lt;/strong&gt;: KVM інтегрований у ядро Linux, що означає, що воно використовує функціональність ядра та користується постійними поліпшеннями ядра. Ця інтеграція забезпечує кращу продуктивність та стабільність для віртуалізованих середовищ.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Повна віртуалізація&lt;/strong&gt;: KVM підтримує повну віртуалізацію, що дозволяє гостьовим операційним системам працювати без змін. Це означає, що ви можете запускати різноманітні операційні системи, включаючи Linux, Windows та інші, як віртуальні машини на хості з підтримкою KVM.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Продуктивність&lt;/strong&gt;: KVM відомий своєю високою продуктивністю, завдяки підтримці апаратно-допомаганої віртуалізації та тісної інтеграції з ядром Linux. Це дозволяє ефективне використання ресурсів та мінімальний накладення при запуску віртуалізованих завдань.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Інструменти управління&lt;/strong&gt;: KVM можна керувати за допомогою різних інструментів, включаючи утиліти командного рядка, такі як virsh, та графічні інтерфейси, такі як Virt-Manager. Ці інструменти надають адміністраторам можливість створювати, налаштовувати та управляти віртуальними машинами на хостах з KVM.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Загалом, KVM є потужним та універсальним рішенням для віртуалізації в системах на базі Linux, пропонуючи продуктивність, гнучкість та зручність управління для віртуалізованих середовищ.&lt;/p&gt;
&lt;h2 id=&#34;встановлення&#34;&gt;Встановлення&lt;/h2&gt;
&lt;h3 id=&#34;перевірка-підтримки-віртуалізації&#34;&gt;Перевірка підтримки віртуалізації&lt;/h3&gt;
&lt;p&gt;Перш ніж встановлювати KVM, переконайтеся, що ваш процесор підтримує віртуалізацію та що вона увімкнена у налаштуваннях BIOS. Більшість сучасних процесорів підтримують віртуалізацію, але краще перевірити ще раз.&lt;/p&gt;
&lt;p&gt;Для отримання докладної інформації про перевірку вашого обладнання, будь ласка, зверніться до &lt;a class=&#34;link&#34; href=&#34;https://wiki.archlinux.org/title/KVM#Checking_support_for_KVM&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Arch Wiki - Перевірка підтримки KVM&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;встановлення-пакетів&#34;&gt;Встановлення пакетів&lt;/h3&gt;
&lt;p&gt;Відкрийте термінал та встановіть необхідні пакети. Це включає утиліту образів диска QEMU &lt;code&gt;qemu&lt;/code&gt;, модуль ядра KVM &lt;code&gt;kvm&lt;/code&gt; та API та інструмент управління віртуалізацією libvirt &lt;code&gt;libvirt&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo pacman -S virt-manager virt-viewer qemu dnsmasq bridge-utils&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;налаштування-служби-libvirt&#34;&gt;Налаштування Служби libvirt&lt;/h3&gt;
&lt;p&gt;Libvirt - це набір інструментів для взаємодії з можливостями віртуалізації ядра Linux. Увімкніть службу libvirt для управління віртуальними машинами.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo systemctl &lt;span class=&#34;nb&#34;&gt;enable&lt;/span&gt; --now libvirtd.service&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Увімкніть автозапуск для типової віртуальної мережі NAT для ваших віртуальних машин:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo virsh net-start default
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo virsh net-autostart default&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Потім відредагуйте конфігурацію libvirt у файлі &lt;code&gt;/etc/libvirt/libvirtd.conf&lt;/code&gt; та встановіть параметри:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;unix_sock_group&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;libvirt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;unix_sock_rw_perms&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;0770&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Додайте свого поточного користувача до групи &lt;code&gt;libvirt&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo usermod -a -G libvirt &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;whoami&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;newgrp libvirt&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Наостанок, перезапустіть демона libvirt, щоб застосувати зміни:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo systemctl restart libvirtd.service&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Після цього ви повинні мати змогу запустити &lt;code&gt;virt-manager&lt;/code&gt; та використовувати віртуалізацію KVM, але якщо ви побачите деякі помилки, спробуйте перезавантажити вашу машину; якщо це не допоможе, перегляньте журнали та конфігурацію вашого демона libvirt.&lt;/p&gt;
&lt;h3 id=&#34;увімкніть-вкладену-віртуалізацію-необовязково&#34;&gt;Увімкніть вкладену віртуалізацію (необов&amp;rsquo;язково)&lt;/h3&gt;
&lt;p&gt;Вкладена віртуалізація дозволяє запускати існуючі віртуальні машини на сторонніх гіпервізорах та на інших хмарних сервісах без будь-яких змін у початкових віртуальних машинах або їхніх мережах.&lt;/p&gt;
&lt;p&gt;Щоб увімкнути її (тимчасово), скористайтеся наступними командами терміналу:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo modprobe -r kvm_intel  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo modprobe kvm_intel &lt;span class=&#34;nv&#34;&gt;nested&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Потім, щоб перевірити, що вона увімкнена, перевірте результат команди:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat /sys/module/kvm_intel/parameters/nested&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;вона повинна надрукувати &lt;code&gt;Y&lt;/code&gt;, якщо вкладена віртуалізація увімкнена.&lt;/p&gt;
&lt;p&gt;Щоб зробити це зміну постійною при завантаженні вашої машини, скористайтеся командою:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;options kvm-intel nested=1&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sudo tee /etc/modprobe.d/kvm-intel.conf&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;посилання&#34;&gt;Посилання&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://wiki.archlinux.org/title/KVM&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Arch Wiki - KVM&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Kernel-based_Virtual_Machine&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Wikipedia - KVM&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://git.kernel.org/pub/scm/virt/kvm/kvm.git&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Вихідний код Kernel Virtual Machine&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
